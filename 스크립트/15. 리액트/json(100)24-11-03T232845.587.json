안녕하세요. 이번 시간에는 CSS를 작성하는 세 가지 방법에 대해서 살펴보겠습니다.
첫 번째 방법으로 HTML에서처럼 기본 CSS를 사용하는 방법입니다.
메시지 컴포넌트의 배경색은 블랙이고 프로필 컴포넌트의 배경색은 오렌지입니다.
메시지 컴포넌트와 프로필 컴포넌트에서 CSS를 사용할 때 동일한 래퍼 클래스명을
사용했습니다.
CSS가 전역 스코프를 가지고 있기 때문에 두 컴포넌트를 동시에 사용하면 스타일 충돌이
발생합니다 이렇게 둘 다 같은 색상으로 보여집니다
뒤에 임포트된 래퍼 클래스의 스타일이 앞서 임포트된 래퍼 클래스의 스타일을 덮어 쓰게
됩니다 이는 CSS 파일 로드 순서에 따라 최종적인 스타일이 결정되기 때문입니다.
스타일 충돌을 방지하려면 CSS에 클래스명을 작성할 때마다 이름이 겹치지 않도록 작명을 잘
해야 하는데요.
겹치지 않게 작명을 하려고 해도 하다 보면 이름이 겹치는 경우가 종종 발생할 수도
있습니다. 이 방법은 사이트 전역으로 적용할 스타일에 사용하시면 좋습니다
src 폴더의 컴포넌트 폴더에 메시지 컴포넌트와 프로필 컴포넌트의 자바스크립트 코드와
css 코드를 복사합니다
두 컴포넌트의 css 파일에서는 동일한 이름의 래퍼 css 클래스가 있구요
서로 스타일이 다릅니다
F4 컴포넌트에서 두 컴포넌트를 모두 사용해 보겠습니다.
import 코드로 추가해 주시고요.
현재 메시지 컴포넌트가 먼저 임포트되고 나서 프로필 컴포넌트를 임포트했습니다.
렌더링된 화면을 보시면 나중에 임포트된 프로필 컴포넌트 스타일로 두 컴포넌트가 스타일링
되었음을 확인하실 수 있습니다.
메시지 컴포넌트를 나중에 임포트하면 두 컴포넌트의 스타일이 다시 바뀝니다.
블라우저 개발자 도구의 요소 탭에서 각 컴포넌트를 찍어 보시면 두 컴포넌트 모두 현재
클래스 속성이 래퍼이고요.
두 컴포넌트의 CSS 스타일이 모두 로딩되었지만 앞서 로딩된 CSS 스타일이 무시되고
나중에 로딩된 CSS 스타일로 동작하고 있습니다.
컴포넌트 스타일을 지정하실 때 css 모듈을 사용하시면 더 이상 클래스명 네이밍 충돌을
걱정하실 필요가 전혀 없습니다
왜냐하면 이렇게 클래스명에 자동으로 고유한 해시값을 적용해주기 때문입니다
css 모듈은 크레이트 리액트 앱에 기본 설정되어 있고요 css 파일명 확장자만
module.css로 변경만 해주시면 컴파일 단계에서 고유한 이름으로 변환되어 스타일
충돌을 방지합니다 메세지.css 파일과 프로필.css 파일의 확장자를 모듈.css로
변경하시고요 각 자바스크립트 파일에서 임포트하는 경로도 파일명에 맞춰 수정합니다
css 모듈은 임포트하면 자바스크립트 객체로 처리됩니다 임포트하시고 해당 css
클래스명으로 클래스네임 속성에 지정해 주세요
이제 두 컴포넌트의 스타일이 덮어쓰기 되지 않고 각각 잘 보여짐을 확인하실 수 있습니다.
브라우저 개발자 로그로 찍어보시면 이렇게 서로 다른 클래스명으로 자동 생성되었고요.
이제 더 이상 클래스명 겹침을 고민하지 않으셔도 됩니다.
CSS 언어도 차츰 개선되고 있는데요.
CSS가 프로그래밍 언어이지만 변수, 상속, 믹스인, 함수, 조건문, 방법문 등의 기능이
좀 아쉽죠? CSS 언어의 슈퍼셋 언어로서 여러 언어가 있는데 그 중 SASS 언어가
있습니다. SASS 지원을 위해 SASS 라이브러리 설치가 필요합니다.
SASS 코드에서는 변수 기능을 사용할 수 있고요
요즘 CSS 기본에서도 변수 기능을 지원하긴 합니다
다른 SASS 파일도 임포트할 수 있고요 빌트인 함수를 통해 30% 밝거나 어두운 색상을
계산해서 지정할 수도 있습니다
CSS에서는 사람이 매번 계산해서 값을 지정해줬어야 했죠
CSS 파일 확장자를 .scss나 .sass로 지정하시면 SASS 문법을 활용하실 수
있습니다 SASS 모듈 기능을 활용하시려면 module.scss 확장자나
module.sass 확장자를 사용하시면 됩니다.
scss 포맷과 sass 포맷은 거의 동일한데요.
scss 포맷은 중갈로와 세미콜론이 있고요.
sass 포맷은 파이썬처럼 중갈로와 세미콜론을 사용하지 않고 들여쓰기만으로 블록을
구별합니다. 개발용 라이브러리로서 SASS를 설치합니다.
message.module.css 파일과 profile.module.css 파일의 확장자를
module.scss로 변경하고요. 각
자바스크립트 파일에서 임포트하는 경로도 파일명에 맞춰 수정해 줍니다.
SASS는 CSS 언어의 슈퍼셋이기에 CSS 문법을 그대로 사용하실 수 있거든요.
그러니 현재 CSS 모듈 코드도 그대로 잘 동작합니다.
컴포넌트 폴더에 shared.scss 파일을 생성하겠고요 각 css 파일에서 공유할 테마
색상을 정의하시고 다른 css 파일에서는 임포트에서 참조하실 수 있습니다
sass 함수를 통해 지정 비율만큼 밝은 혹은 어두운 색상 코드를 계산하실 수 있습니다
css 파일에서는 매번 사람이 계산해서 값을 지정했었죠
이외에도 다양한 택상 관련 함수, 문자열 관련 함수, 숫자 관련 함수들을 지원해 줍니다.