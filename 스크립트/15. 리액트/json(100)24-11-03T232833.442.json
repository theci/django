안녕하세요 이번 시간에는 각 이벤트에 대한 이벤트 핸들러를 올바르게 지정하여 각 이벤트를
처리하는 방법에 대해서 살펴보겠습니다
비교 예시로써 HTML에서도 거의 모든 요소에 대해 이렇게 이벤트 핸들러를 등록할 수
있습니다 속성명은 대소문자를 가리지 않는데요
이렇게 onclick 속성으로서 수행될 함수를 문자열로 지정합니다
그러면 이 버튼을 클릭할 때마다 콘솔에 메시지가 출력됩니다
React 컴포넌트는 엘리먼트를 조합해서 만들 뿐이니까 컴포넌트에서는 이벤트를 지원할 수
없고요 엘리벤트에서 클릭, 우클릭, 값 변경, 키 입력 등의 다양한 웹 브라우저 기본
이벤트를 지원합니다
이렇게 버튼 엘리먼트에 onClick 속성으로 클릭 이벤트에 대한 이벤트 리스너 함수를
지정합니다 속성명은 대소문자를 구별하니까 필히 대소문자를 맞춰서 속성명을 지정해 주셔야
합니다 그런데 아래 버튼 컴포넌트에도 onClick 속성 값을 지정했는데요 위에 버튼
컴포넌트 코드를 보시면 onClick 속성 값을 지원하지 않고 있죠
그러니 이 onclick 속성 값은 무시되고요 아무리 이 버튼 컴포넌트를 클릭해도 속성
값의 메시지가 출력되지 않습니다
app4 컴포넌트를 추가하고 app4 컴포넌트만 사용하겠습니다
애플 컴포넌트에 버튼 엘리먼트만 하나 추가합니다.
그리고 ClickEventListener 함수를 등록하면요.
클릭할 때마다 이렇게 콘솔 메시지가 잘 출력됩니다.
상단에 버튼 컴포넌트를 하나 구현하고요.
버튼, 엘리먼트 코드대로 버튼, 컴포넌트 코드를 작성합니다
버튼, 엘리먼트는 클릭하면 클릭 메시지가 출력되는데 버튼, 컴포넌트는 클릭해도 아무런
메시지가 출력되지 않습니다
버튼, 컴포넌트에서는 onclick 이름의 속성 값을 지원하고 있지 않기에 이
onclick 속성 값은 무시되고 있는 상황입니다
버튼 컴포넌트에서 이렇게 onclick 속성 값을 받아서 내부의 React 엘리먼트에
이벤트 핸들러를 등록해 주셔야만 이제 버튼 컴포넌트에서 onclick 이벤트를 지원하게
됩니다. 버튼 컴포넌트를 클릭하는 것은 그 안에 버튼 엘리먼트를 클릭하는 것이고요.
버튼 엘리먼트의 클릭 이벤트 리스너를 통해 이제
이렇게 콘솔 메시지가 출력됩니다
버튼 컴포넌트로 버튼 엘리먼트처럼 레이블을 지정할 수 있도록 해보겠습니다
컴포넌트 태그 사이에 지정되는 부분은 해당 컴포넌트에는 children 이름의 속성 값으로
전달됩니다
children 속성 값으로 받아서 버튼 엘리먼트 태그 사이에 적용하시면 됩니다
그럼 이렇게 지정한 대로 버튼 레이블이 잘 동작합니다.
React는 웹블라우저용 UI 라이브러리이니까요.
React Element에서는 웹블라우저의 모든 기본 이벤트를 지원합니다.
각 이벤트에 맵핑되는 속성 값으로 이벤트 핸들러 함수를 지정해서 이벤트를 처리하실 수
있습니다.
HTML에서 이벤트 핸들러를 등록하는 방법과 React에서 이벤트 핸들러를 등록하는 방법이
다릅니다.
HTML에서는 이렇게 함수 호출 코드를 쓰시면 클릭 이벤트가 발생할 때마다 이 함수가
호출되고요. 함수 호출 시에 이벤트 객체를 이렇게 명시적으로 전달할 수도 있습니다.
그런데 React에서 이렇게 쓰시면 클릭 이벤트가 발생하는 시점이 아니라 이 컴포넌트에서
렌더링이 될 때, 즉 이 속성 값이 채워질 때에 이 함수가 호출됩니다.
이 함수의 반환 값이 이벤트 핸들러로 등록됩니다.
그런데 핸드 클릭 함수의 반환 값은 없으니 반환 값은 Undefined일 테고요.
OnClick 속성 값에 Undefined가 적용되어 클릭 이벤트 발생 시에 어떠한 동작도
하지 않습니다.
그럼 이렇게 onclick 속성 값으로 함수 객체를 지정하실 수 있는데요.
그러면 클릭 이벤트 발생 시에 해당 함수가 호출됩니다.
그리고 첫 번째 인자로 이벤트 객체가 전달됩니다.
이 방식도 좋지만 이벤트 객체의 전달이 직관적이지 못합니다.
혹은 이렇게 핸들클릭 함수를 함수로 한 번 더 랩핑해서 이벤트 객체를 명시적으로 전달하시는
방법도 좋습니다.
이렇게 함수를 랩핑하시면 핸들클릭 함수가 인자를 받지 않는다면 이렇게 명시적으로 인자를
전달하지 않으면서 함수를 호출할 수도 있습니다.
app4 컴포넌트 내에 핸들클릭 함수를 추가합니다.
호출되면 이벤트가 발생한 요소를 출력하도록 합니다.
첫 번째로 ClickEventListener를 등록할 때 이렇게 handleClick 함수를
호출하면 handleClick 함수는 컴포넌트가 렌더링이 될 때 호출되고요 그 반환 값이
onClick 속성 값으로 전달됩니다
그런데 반환 값이 없으니 등록된 ClickEventListener가 없는 상황입니다
두 번째로 이렇게 함수를 호출하지 않고 함수 객체를 넘기면 정상적으로 핸들클릭 함수가
클릭 이벤트 리스너로서 등록됩니다.
이 버튼을 클릭하면 이벤트 객체를 전달받았고 콘솔 메시지가 잘 출력됩니다.
하지만 핸드 클릭 함수에 이벤트 객체가 전달되는지는 이 코드만으로는 알아차리기 어렵습니다.
세 번째로 익명 함수를 만들고 익명 함수에서 이벤트 객체를 받아서 핸드 클릭 함수를 호출
시에 명시적으로 이벤트 객체를 넘겨줍니다.
동작은 동일한데요.
핸드 클릭 함수 호출 시에 이벤트 객체가 전달됨이 코드에 명시적으로 잘 드러나고 있습니다.
만약 핸들클릭 함수에서 이벤트 객체를 받을 필요가 없는 상황이라면 이때에도 핸들클릭 함수
출시에 이벤트 객체를 전달하지 않음을 코드를 통해 명확하게 드러나고 있습니다.