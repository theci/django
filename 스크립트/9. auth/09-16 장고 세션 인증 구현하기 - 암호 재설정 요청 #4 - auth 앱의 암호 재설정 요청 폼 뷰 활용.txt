이번에는 Auth 앱의 PathWordResetForm과 PasswordResetView
클래스 기반를 활용해서 암호 재설정 요청을 구현해 보겠습니다.
Auth 앱의 PathWordResetView 클래스에서는 암호 재설정 요청을 위한 모든 기능이 완벽하게 구현되어 있습니다.
다양한 옵션으로 커스텀도 가능하고요.
Form 클래스 속성으로 PathWordResetForm 클래스가 지정되어 있고요.
템플릿 네임 속성으로 Auth 앱에 password.resetform.html 템플릿이 지정되어 있습니다.
subject 템플릿 네임 속성으로 암호 재설정 이메일 제목의 템플릿이 지정되어 있고요.
재설정 이메일 제목을 변경하시려면 커스텀 템플릿 파일을 만드시고 이 subject 템플릿 네임 속성을 변경하시면 됩니다.
이메일 템플릿 네임 속성으로 암호 재설정 이메일에 플레인텍스트, 본문 템플릿이 지정되어 있습니다.
ExtraEmailContext 속성으로 이메일 본문에 추가할 템플릿 컨텍스트를 지정하실 수 있습니다. 
이 설정은 클래스 변수로써 고정인 정적인 설정이고요.
매우청마다 변경되는 동적인 설정을 추가하시려면 별도 메서드는 없고요.
FormValid 메서드를 재정의해서 구현이 조금 복잡합니다.
이메일을 발송할 때 텍스트 버전의 메시지와 HTML 버전의 메시지를 모두 제공하면 사용자의 환경에 맞는 최적의 형식을 선택하여 표시할 수 있습니다.
HTML 버전은 텍스트 버전보다 더 풍부한 스타일링과 포매팅 옵션을 제공하지만 텍스트 버전은 호환성과 접근성을 보장합니다.
텍스트 이메일 메시지는 이메일 템플릿 네임 속성으로 템플릿 경로를 지정하고요.
HTML 이메일 메시지는 HTML 이메일 템플릿 네임 속성으로 템플릿 경로를 지정합니다.
디폴트로 None인데요.
non일 경우에는 HTML 이메일 메시지를 추가하지 않습니다.
이메일들 입력 받고 이메일 발송 여부와 상관없이 Success URL 설정에 지정된 주소로 페이지 이동을 하는데요.
패스워드 리셋 뷰, 클래스 기반 뷰, 기본 구현에서는 패스워드 리셋 돈 뷰에 지정된 템플릿을 통해 완료 메시지를 만들어서 노출합니다.
혹은 다른 주소로 이동토록 하고 메시지 프레임워크를 통해 완료 메시지를 노출하셔도 좋겠습니다.
비밀번호 리셋 함수 기반 뷰는 주석 처리하고요.
auth 앱의 패스워드 리셋 뷰 클래스 기반 뷰를 활용해서 구현해 보겠습니다.
패스워드 리셋 뷰 클래스에는 이렇게 여러 속성들이 지원됩니다.
이 중에 패스워드 리셋 폼, 폼 클래스는 이메일 폼 필드가 있고요.
send_mail 메서드를 통해 이메일 제목 템플릿과 이메일 내용 템플릿을 통해 이메일 제목 내용을 완성해서 이메일 발송까지 처리합니다.
세이브 메서드 내에서는 이렇게 이메일 주소의 유저를 조회하고 이메일 발송에 필요한 컨텍스트 정보들을 정리해서 send_mail 메서드를 호출해서 암호 재설정 이메일을 발송합니다.
익스트라 이메일 컨텍스트 속성 값도 있으면 컨텍스트 사전에 추가합니다.
비밀번호 리셋 뷰 기본 설정에서는 패스워드 리셋 온 페이지를 사용해서 암호 재설정 요청 완료 메시지를 노출하지만 우리는 암호 재설정 요청을 처리한 뒤에 이메일을 입력받았던 암호 재설정 요청 페이지로 다시 이동하도록 하고요.
Django의 메시지 프레임워크를 통해 암호 재설정 요청 완료 메시지를 노출하겠습니다.
메시지 프레임워크 적용은 뒤에서 곧 해볼게요.
웹브라우저로 Accounts의 Password Reset 페이지에 방문하시고 시스템에 있는 이메일 주소를 입력해서 암호 재설정 요청을 수행해 주세요.
그런데 이와 같이 Password Reset Confirm 이름에 대한 URL Reverse 실패 예외가 발생했습니다.
이 예외가 발생한 부분을 보니 Registration 밑에 Password Reset Email.html 템플릿이네요.
암호 재설정 링크를 생성할 목적으로 패스워드 리셋 컨펌 이름으로 URL 리버스를 수행할 때 예외가 발생했네요.
우리 프로젝트에서 Accounts 앱에 패스워드 리셋 컨펌 이름의 URL 패턴이 있지만 Accounts 이름에 네임 스페이스가 적용이 되어 있죠.
Accounts 앱에 패스워드 리셋 컨펌 패턴을 사용하려면 URL 리버스 시에 패턴명 앞에 Accounts 콜론을 붙여서 붙여서 네임 스페이스까지 기입을 해주셔야 합니다.
네임스페이스가 없는 패서드 리셋 컨펌 이름의 URL 패턴은 없기 때문에 URL 리버스 예외가 발생한 상황입니다.
그럼 이 상황을 어떻게 풀어야 할까요?
URL 리버스 부분이 문제이니 URL 리버스 코드만 바꾸면 될 듯한데, 이는 템플릿에 하드 코딩 되어 있죠.
이를 위해 템플릿을 새롭게 정의해야 할까요?
아닙니다. 이 템플릿을 보시면 메시지의 각 영역들이 템플릿 블록으로 나눠져 있습니다.
그러니 레지스트레이션의 패스워드 리셋 템플릿은 상속받고, 문제의 URL 리버스 코드는 리셀 링크 블록이니 이 리셀 링크 블록만 재정의해서 구현하실 수 있습니다.
Accounts 밑에 PathWordResetEmail.html 템플릿 파일을 뷰 설정에 지정하시고 템플릿 파일도 생성하겠습니다.
부모 템플릿으로 레지스트레이션에 password-reset-email.html 파일을 지정하고요. 
리셀 링크 블록도 재정의합니다.
링크 코드를 복사하시고 URL 리버스 부분에 accounts:password-reset를 추가해 주세요. 다시 암호 재설정을 요청해 보시면 다른 예외가 발생합니다.
SMTP Sender Refused 예외이고요.
이메일 송신자 이메일 주소가 웹마스터 골뱅이 로컬로스트이며 인증되지 않은 이메일 주소라고 합니다. 
현재 네이버 메일이 설정되어 있으니 이메일 송신자 이메일 주소도 네이버 메일 주소가 되어야 합니다.
그런데 웹마스터 골뱅이 로컬로스트 주소는 어떻게 지정된 것일까요?
폼의 send_mail 메서드에서 from 이메일 인자가 이메일 멀티 얼터네이티브 인자로 전달이 되고요. 
save 메서드에서는 from_email 인자가 디폴트 non이고, non 값이 그대로 샌드메일 메서드에 전달이 되었습니다.
EmailMultiAlternatives 클래스의 생성자로 fromEmail 인자가 non으로 지정되면, settings에 defaultFromMail 인자가 default로 사용되도록 되어 있네요.
settings에 defaultFromEmail 값이 default로 웹마스터 골뱅이 로컬 호스트입니다. 
이 설정 값도 환경 변수로부터 지정될 수 있도록 세팅스에 반영해 보겠습니다. 
.env에도 추가해 주고요.
패스워드 리셉 뒤에 formValid 메서드에서 성공 메시지로 추가해 줍니다.
이제 비밀번호 재설정 요청을 하시면 이렇게 요청 성공 메시지가 보여지고요.
이메일을 확인해 보시면 이렇게 네이버 메일을 통해 비밀번호 재설정 메일도 잘 받았습니다.


이 내용은 Django에서 비밀번호 재설정 요청을 구현하기 위한 과정에 대해 설명하고 있습니다. 이를 위해 Auth 앱의 PasswordResetView 클래스 기반 뷰와 PasswordResetForm 폼을 활용하며, 템플릿과 이메일 발송 설정, URL 처리 등을 다루고 있습니다.

1. PasswordResetView 클래스
PasswordResetView 클래스는 비밀번호 재설정을 위한 기본적인 기능을 제공합니다. 이 클래스는 PasswordResetForm 폼을 사용하고, 이메일 템플릿과 관련된 설정을 통해 사용자에게 비밀번호 재설정 이메일을 발송합니다.
주요 속성:
form_class: PasswordResetForm 클래스가 지정되어, 사용자 이메일을 입력받는 폼이 사용됩니다.
template_name: password_reset_form.html 템플릿을 사용하여 이메일 입력 폼을 제공합니다.
subject_template_name: 비밀번호 재설정 이메일의 제목을 설정할 템플릿 경로입니다.
email_template_name: 비밀번호 재설정 이메일의 본문 템플릿 경로를 지정합니다.
extra_email_context: 이메일 발송 시 추가적인 템플릿 컨텍스트를 설정할 수 있습니다.
2. 이메일 발송
비밀번호 재설정 요청 시, 이메일을 발송하는데, 텍스트 버전과 HTML 버전의 이메일을 모두 제공할 수 있습니다.
send_mail 메서드를 통해 이메일을 발송하며, 이메일 제목과 본문 템플릿을 통해 이메일을 완성합니다.
extra_email_context 속성 값이 있을 경우 이를 템플릿 컨텍스트에 추가합니다.
3. 비밀번호 재설정 후 동작
기본적으로 성공 URL에 설정된 주소로 이동하며, 암호 재설정 요청 완료 메시지를 표시합니다.
메시지 프레임워크를 사용하여 비밀번호 재설정 요청 완료 메시지를 사용자에게 알릴 수 있습니다.
4. URL 리버스 처리 문제
PasswordResetView에서 암호 재설정 링크를 생성할 때 password_reset_confirm이라는 URL 패턴을 리버스할 때 URL 리버스 예외가 발생합니다. 이는 프로젝트에서 네임스페이스가 적용된 URL 때문입니다.
해결 방법: 템플릿에서 URL 리버스를 사용할 때 accounts:password_reset_confirm와 같이 네임스페이스를 포함한 URL을 지정해야 합니다.
이를 위해 password_reset_email.html 템플릿을 상속하여 URL 리버스 코드만 수정할 수 있습니다. 즉, reset_link 블록을 재정의하여 accounts: 네임스페이스를 추가합니다.
5. SMTP 설정 문제
SMTP Sender Refused 예외가 발생하는 경우, 이메일 발송 시 송신자 이메일 주소가 인증되지 않은 것으로 나타납니다.
이 문제는 send_mail 메서드에서 from_email 인자값이 None으로 전달되었기 때문입니다. 이 값이 제대로 설정되지 않으면 DEFAULT_FROM_EMAIL 값이 사용되며, 기본값은 webmaster@localhost로 되어 있습니다.
해결 방법: settings.py에서 DEFAULT_FROM_EMAIL 값을 네이버 이메일 주소로 설정하고, 이를 환경 변수로 관리하도록 .env 파일에 추가합니다.
6. 비밀번호 재설정 완료
비밀번호 재설정 요청 후, 성공 메시지가 페이지에 표시되고, 네이버 메일을 통해 비밀번호 재설정 이메일이 정상적으로 발송됩니다.
핵심 정리:
PasswordResetView 클래스를 활용하여 비밀번호 재설정 요청을 처리하고, 이메일을 발송하는 방법을 구현합니다.
URL 리버스 예외 문제를 해결하기 위해 네임스페이스를 포함한 URL 패턴을 사용해야 합니다.
이메일 송신자 주소와 관련된 SMTP 설정을 적절히 수정하여 이메일 발송 오류를 해결합니다.
환경 변수를 사용하여 이메일 설정을 안전하게 관리하고, 최종적으로 비밀번호 재설정 이메일을 성공적으로 발송할 수 있습니다.