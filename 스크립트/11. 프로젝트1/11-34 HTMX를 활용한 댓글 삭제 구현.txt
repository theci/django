안녕하세요 이번 시간에는 HTMX를 활용한 댓글 삭제를 구현해 보겠습니다 수정하기 버튼 옆에 삭제하기 버튼을 추가하겠고요 
삭제하기 버튼을 클릭하면 컨펌 창을 통해 삭제 의사를 물어본 뒤에 확인 버튼을 클릭하면 해당 댓글이 삭제되고 댓글 목록에서도 자동 삭제됩니다
underbar 코멘트 리스트 점 html 템플릿에서 수정하기 버튼 옆에 삭제하기 버튼을 추가합니다
두 버튼이 너무 붙어 있으니 간격을 조금 벌려 주겠고요.
댓글 수정하기 URL과 유사한 패턴으로 댓글 삭제 URL도 등록해 줍니다.
댓글 삭제 뷰는 DeleteView 클래스를 상속받아서 구현하겠고요.
GetCodicet 메서드를 재정의해서 댓글 작성자만 삭제할 수 있도록 제안하겠습니다.
폰벨리드 메서드를 재정의할 텐데요.
부모의 폰벨리드 메서드 구현을 먼저 살펴보시면요.
성공 URL을 먼저 계산한 뒤에 self.object.delete 메서드를 호출하여 삭제한 뒤에 해당 주소로에 이동 응답을 합니다.
htmx 응답만을 할 것이기에 부모의 폼벨리드 메서드는 호출하지 않겠고요.
직접 구현하겠습니다.
self.object.delete 메서드를 호출하여 지정 댓글을 삭제하고요.
성공 메시지를 등록하고, 성공 메시지 렌더링을 위해 underbar messages as event.html 템플릿을 사용하고, 댓글 목록 자동 새로고침을 위해 refreshCommentList 이벤트를 발생시킵니다.
댓글 삭제하기 링크에서는 htmx-post 요청으로 댓글 삭제 요청을 하겠고요.
hx-confirm 속성으로 컨펌 메세지를 등록하시면 이 버튼 클릭 시에 htmx에서 컨펌 메세지를 자동으로 띄워주고 확인 버튼을 클릭하면 htmx 요청을 전송합니다.
htmx 응답은 따로 처리하지 않을 것이기에 hx-swap 속성은 none으로 지정합니다.
서버에서 refreshCommentList 이벤트를 받아서 댓글 새로고침이 동작할 것입니다.
댓글 새로고침하시고 버튼을 클릭해 보시면 컨펌장이 뜨고요.
버튼을 클릭하시면 댓글 새로고침이 수행되고 지정 댓글이 삭제되었음을 확인하실 수 있습니다.
그런데 앞서 뷰에서 추가했던 성공 메시지가 보여지지 않고 있습니다.
서버에서 댓글을 삭제했습니다라는 성공 메시지를 렌더링해서 htmx 응답을 했지만 클라이언트 단에서 hx-swap 속성을 non으로 지정했기에 그 응답을 웹페이지에 반영을 하지 않았기 때문입니다. 
댓글 수정 버튼처럼 hx-target 속성을 body로 지정하시고 hx-swap 속성을 before&로 지정하시면 htmx 응답이 body 요소 끝에 추가되어 웹페이지에 반영이 될 것이고요.
댓글 삭제 성공 메시지도 화면에 잘 보여질 것입니다.
마지막으로 댓글 수정 뷰와 삭제 뷰는 작성자만 요청을 받을 수 있도록 제안이 걸려 있는데요
수정하기 버튼과 삭제하기 버튼도 댓글 작성자에 한해서만 보여지도록 하겠습니다
댓글의 작성자와 현재 요청 유저가 같을 때에만 각 버튼이 렌더링 되도록 if 조건문을 추가합니다 
그런데 페이지 새로고침에서는 수정하기, 삭제하기 버튼이 안 보이는데 댓글 새로고침 버튼을 클릭하면 두 버튼이 보여집니다
댓글 목록이 렌더링 되는 두 가지 경우가 있죠
첫 번째는 노트 디테일 템플릿의 include를 통해 렌더링이 되고요 이 경우에 지금 수정하기, 삭제하기 버튼이 없습니다
두 번째는 코멘트 리스트 뷰를 통한 렌더링이죠
이때에는 수정하기, 삭제 버튼이 있습니다
note-detail.html 템플릿에서는 underbar-comment-list.html 템플릿을 include할 때 only 키워드를 지정했었잖아요.
그러니 with에 지정한 comment-list 값만 note-detail.html 템플릿으로 전달될 뿐 요청 객체인 request는 전달되지 않았습니다.
그래서 이 if 조건절이 항상 거짓 판정이어서 수정하기, 삭제하기 버튼이 노출되지 않았던 것입니다. 
유저 이름으로 현재 요청의 유저 객체를 전달하겠고요.
언더바 코멘트 리스트 점 HTML 템플릿에서도 유저 속성으로 현재 요청의 유저 객체를 참조하도록 하겠습니다.
그럼 처음 페이지 새로고침에서도 수정하기, 삭제하기 버튼이 잘 노출됩니다.