이번 시간에는 노트 내용에서 해시태그를 추출해서 태그 모델로 자동 저장하고, 지정 태그를 가진 태그 목록을 조회하는 기능을 만들어 보겠습니다.
태그 모델은 직접 구현하지 않고, Django Taggit 라이브러리를 활용하겠습니다.
Django TagIt 라이브러리는 현재 5.0.1 버전이 최신 버전입니다.
5.0.1 버전으로 설치하고, common.txt 파일의 패키지명과 버전도 명시합니다.
그리고 인스톨드 앱스 리스트에 태그 이름만 추가하면 기본 설치 끝입니다.
태그 잔고 앱에 대한 마이그레이트는 곧 수행해 주겠습니다.
잔고 태그에서는 각 태그의 대소문자를 디폴트로 구별합니다.
대문자로 구성된 파이썬 태그와 소문자로 구성된 파이썬 태그는 서로 다른 태그로 저장한다는 의미인데요.
대소문자를 구별하지 않고 태그 이 설정을 참으로 지정하면 지정 태그의 존재 유무를 확인하는 쿼리셋에서 underbar i-exist lookup을 통해 대소문자를 무시한 조회를 수행합니다.
이제 노트 모델에 대한 태그 이름의 필드를 추가하고요.
노트의 컨텐트 필드에서 해시태그를 자동 추출해서 저장할 테니까요.
after save hook을 통해 컨텐트 필드 값이 변경되었을 때에만 태그를 추출 저장하도록 하겠습니다.
정규 표현식을 통해 컨텐트 필드에서 해시태그 문자열 리스트를 생성하겠고요.
태그 필드의 set 메서드를 통해 매번 태그들을 삭제하고 새롭게 저장하도록 합니다.
migrate 명령을 수행해서 태그 잇 장고 앱에 대한 데이터베이스 테이블을 생성해주고요.
노트 모델 클래스의 라이프사이클 모델 믹스인 상속이 누락되어 있었네요.
추가해줍니다. 노트 수정 페이지에서 컨텐츠 필드에서 한 글자만 수정하고 저장해 보면 Attribute error가 발생했습니다.
typing.ally 객체에는 findAll 메서드가 없다고 합니다.
모델 코드를 보니 제가 ali를 typing 패키지에서 잘못 import했네요.
수정해 주고요.
다시 노트 수정 페이지에서 컨텐츠 필드에서 한 글자만 수정하고 저장해 보시면 이번에는 수정 저장이 되었고요.
어디밈 페이지에서 생성된 태그 목록을 살펴보시면 태그들이 여럿 생성이 되어 있습니다.
노트 디테일 페이지에서 저장된 태그 목록을 추가로 보여줄 수도 있겠지만 노트 내용에 태그가 이미 명시되어 있으니 이를 활용하겠고요.
각 해시태그의 문자열을 태그로 변경해 보겠습니다
그럼 그 해시태그 링크를 클릭하면 그 태그의 노트들을 모아서 볼 수 있도록 구현해 보겠습니다
해시태그의 문자열을 태그로 변경하는 것은 단에서 태그를 통해 구현하실 수도 있고요 
웹 프론트 단에서 자바스크립트를 통해 구현하실 수도 있습니다
후자로 자바스크립트를 통해 구현해 보겠습니다
코어 앱 static 디렉토리 아래에 해시태그 linkify.js 파일을 생성하겠고요.
데이터 해시태그 linkify 속성이 적용된 요소가 탐지되면 해시태그 패턴의 문자열을 찾아서 a 태그로 자동 변환해 주겠습니다.
그런데 a 태그에 지정할 주소도 필요하잖아요.
이는 데이터 해시태그 linkify 속성의 값으로 전달받도록 하겠습니다.
인덱스 뷰에서 태그 이름의 쿼리 파라미터로 전달받도록 하겠고요.
최상위 부모 템플릿에서 해시태그 linkify.js 파일을 로드해주고요.
의존하는 observe-loadinsertion.js 파일도 그 전에 로드해줍니다.
페이지 새로고침하시면 노트 내용 드랙에서 줄바꿈이 없어졌는데요.
제 실습에서는 텍스트 컨텐츠 속성을 한번 참조했기 때문이고요.
innerHTML 속성으로 참조하시면 잘 동작합니다.
해시태그를 클릭하시면 인덱스 페이지에 태그 이름의 쿼리 파라메타가 잘 지정되어 있음을 확인하실 수 있습니다.
아직 지정 태그의 노트만 필터링해서 보여주는 기능은 구현하지 않았습니다.
노트 목록에서 태그 목록을 같이 출력해 볼 텐데요.
Django Taggit 라이브러리에서는 태그에서 Name 필드만 조회하는 Names 메서드를 지원합니다.
페이지 새로고침해보시면 등록된 태그들이 여럿 보이는데요.
수행된 SQL 쿼리를 보시면 N+1 문제가 발생하고 있죠.
인덱스 뷰에서 태그스 필드에 대해 즉시 로딩을 적용하시고 페이지를 새로고침하시면 여전히 N+1 문제가 남아있습니다.
장고 태그잇의 태그 모델에는 id, name, slug 3개 필드가 정의되어 있구요 인덱스 뷰의 즉시 로딩에서는 이 3개 필드에 대한 조회를 수행합니다 
그런데 장고 태깃 라이브러리에서 제공하는 .names() 메서드에서는 name 필드만 조회하니 즉시 로딩에서 수행되는 코디와 지금 코디가 서로 다른 상황입니다
그러니 앞서 수행된 즉시 로딩된 내역을 사용하지 않고 별도 코디로 조회가 수행되었던 것입니다 
템플릿 내에서 .named 메서드를 사용하지 마시고 all 메서드를 사용해 주세요. 
그러면 즉시 로딩된 내역을 사용하여 N+1 문제가 해결됩니다.
태그 목록을 순회 돌며 해시태그들을 이렇게 노출할 수 있고요.
처음 5개 태그만 노출하고자 하실 경우에 이렇게 0부터 시작하는 인덱스를 체크해서 처음 5개만 노출시키실 수 있습니다
이때에도 추가 쿼리 없이 수행됩니다
해시태그를 작게 보여주려고 태그를 지정했고요 추가 스타일도 적용해 줍니다
인덱스 뷰에서 태그 이름의 쿼리 파라메터를 조회하고요 값이 있을 경우에 태그 필터링을 수행합니다 
태그 필드명에서 오타가 있었네요.
태그를 태그로 변경해 줍니다.
페이지 새로 고침하시면 지정 태그에 노트만 필터링되어 보여짐을 확인하실 수 있습니다.