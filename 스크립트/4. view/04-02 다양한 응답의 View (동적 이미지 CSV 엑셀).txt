이번 시간에는 다양한 응답의 뷰입니다.
동적으로 이미지와 CSV, 엑셀 응답을 만들어 보겠습니다.
동적 이미지 생성이고요.
필요한 라이브러리는 pillow와 requests입니다.
이와 같이 hottrack에 1//cover.png라는 요청을 받으면 커버 PNG라는 뷰 함수를 호출할 것이고요.
지정 PK의 Song을 찾아서 해당 커버 앨범 이미지를 베이스로 깔고 사선 선을 긋고 원하는 텍스트를 그린 이미지 응답을 하는 코드입니다.
그리고 추가로 코디 스트링으로 사이즈 인자로 받도록 했습니다.
해당 사이즈를 지정하지 않으면 디폴트로 256이고요.
최대값은 512까지 허용하도록 했습니다.
그래서 캠퍼스 사이즈 받아서 지정을 해주고요.
makeCoverImage라는 함수를 따로 만들었습니다.
hottrack 유틸즈의 커버에 만들었고요.
이 함수는 Pillow라는 파이썬 이미지 라이브러리 기반에서 빈 캠퍼스를 만들고요 
커버 이미지 데이터를 요청해서 커버 이미지를 받으면 이 캠퍼스에다가 이미지를 붙입니다
이미지를 붙일 때 사이즈를 맞춰야 되니까 썸네일 처리를 하고요 
이미지를 못 받으면 이미지 X 표시를 빨간색과 파란색으로 그리고요 
그리고 사선 스트라이프, 이렇게 사선으로 스트라이프 패턴을 그립니다
폰트는 다양한 폰트를 지정하실 수 있는데 윈도우 같으면 일단 맑은 고딕, 맥 같으면 애플 고딕 폰트를 로딩을 해서 일단 그리도록 했고 
Pillow를 통해서 디폴트 폰트를 찾아서 사용을 하도록 했어요
그리고 텍스트는 이미지의 가운데에 그릴 거예요
그래서 텍스트를 그릴 시작 좌표 를 계산을 좌상단의 좌표를 계산하는데 이 박스 크기를 계산해야 되는데 이 계산하는 코드가 Pillow가 현재 버전이 10이 넘었거든요
10부터 이 코드 API의 변경이 좀 있습니다
그래서 설치된 Pillow 라이브러리의 버전을 체크한 다음에 10 이상이면 이 코드, 10 미만이면 아래 코드를 수행해서 이제 x, y 좌표를 계산하고 그리고 해당 위치에다가 인자로
받은 텍스트를 그리도록 했습니다
그리고 생성한 이미지 객체를 반환을 하는 거죠
그럼 뷰 함수에서는 그 이미지 객체를 받아가지고요 
이 이미지 객체를 파일에다가 직접 저장을 할 수도 있겠지만은 Django의 HTTP 리스펀스는 파일처럼 동작하는 부분이 있습니다
그래서 이 이미지 객체 점 세이브 함수 호출할 때에 response 객체를 지정해 주시고요
이미지는 다양한 포맷으로 저장할 수 있는데 저는 png 포맷으로 저장토록 했습니다
그리고 리턴을 해주면 이와 같은 응답을 받을 수 있고요
현재 이 코드는 아래 링크를 통해서 공유해 드렸습니다
해당 링크에 01cover.py라는 파일이 되겠고요 이 경로에다가 이 코드를 생성을 해주시면 이렇게 생성이 되겠고요 
그리고 views.py 코드도 있습니다
cover_png 코드가 되겠고요 이 코드도 복사해서 이렇게 viewspy 하단에다가 적용을 해 보겠습니다
그러면 cover-png에서는 get-object-or-404-import를 위해서 이렇게 import하시고 Alt-Enter 해서 여기도 Alt-Enter 해서 import를 하겠습니다
뷰스파이는 import가 되었고, 핫트랙의 urlspy에서는요.
직접 써볼게요.
route는 PK로 시작하고 커버.png로 끝나면 Vue에서 Vue의 cover_png라는 함수를 호출하겠다고 이렇게 URL 맵핑을 했고요
그런데 라이브 홀리가 없죠
리퀘스트하는 라이브홀리 라이브 홀리와 pillow가 필요합니다
없다는 이 부분에서도 Alt-Enter를 눌러서 패키지를 설치하실 수도 있고요.
PIL을 올려서 한번 Alt-Enter를 눌러 보시면 PIL을 설치하겠느냐, Pillow를 설치하겠느냐라고 나오는데 Pillow를 설치하시는 거예요.
PIL은 옛날 라이브러리입니다.
의존성 관리를 위해서 requirements.txt 파일에 request 그리고 Pillow를 지정하겠습니다
Alt & Done 눌러보시면 최신 버전이 2.31.0 버전이네요
2.31.0 버전을 지정하고 Pillow의 경우에도 보시면 10.1.0 버전이네요.
10.1.0 버전을 지정해서 각각을 Alt, Enter 해서 설치를 해주겠습니다.
그리고 개발 서버를 수동으로 껐다가 다시 실행을 해보면 개발 서버로 잘 떴죠.
그러면 이제 요청을 해봅니다.
Loculus 8000의 핫트랙에 1.1/.cover.png라고 하시면 이렇게 이미지 응답이 오고요 
2로 바꿔보시면 2 응답도 오고요 3으로 바꿔보시면 3으로 응답도 오고 
이렇게 여러분들이 Django 뷰 함수에서 원하시는 이미지를 Pillow를 활용해서 다양한 형식으로 동적 이미지를 생성해 내실 수 있습니다
이번에는 Pandas를 통해서 동적으로 CSV 응답을 만들어 보겠습니다
Pandas 라이브러리가 필요하겠고요 스포트 CSV 뷰 함수가 있고 URL에서는 추가적인 인자는 없습니다
뷰 함수가 호출이 되면 모든 노래를 조회해서 이 코디셋을 가지고 Pandas의 데이터
프레임 객체를 만들려고 하는데요
이 코디셋을 인자로 바로 지정을 할 수는 없거든요
그래서 .values를 통해서 사전 리스트를 변환합니다
이렇게 생성된 사전 리스트를 인자로 지정해서 DataFrame 객체를 만드실 수 있어요
이 DataFrame.to_csv라는 함수를 통해서 CSV 파일을 만드실 수
있어요 toUnderbar.csv의 첫 번째 인자로 파일 경로를 주면 파일을 만드실 수
있는데 우리가 파일 생성이 목적이 아니라 파일 응답을 주는 것이 목적이기 때문에 파일로
저장하지 않고요 이렇게 메모리 파일 객체를 하나 만들어서 이 메모리 파일 객체를 이렇게
지정하실 수 있습니다
이렇게 지정하시면 이 메모리 파일 객체의 csv 파일 내용이 저장이 되는 것이고요 그리고
이 데이터 프레임의 인덱스는 여기에 저장되지 않도록 거짓을 지정하고 그리고 CSV 파일은
일반적인 텍스트 파일이기 때문에 이 파일 자체에 그 파일이 어떤 인코딩으로 생성이
되었는지에 대한 정보가 없어요
그런데 한글 엑셀에서는 CSV 텍스트 파일을 해석하는 기본 인코딩이 CP949 거든요
수많은 프로그램에서 csv 파일을 utf-8 인코딩으로 생성을 하거든요.
이 to-csv 함수도 default로 utf-8 인코딩으로 생성을 합니다.
그러면 생성된 인코딩은 utf-8인데 한글 엑셀에서 해석하는 인코딩은 cp949니까 한글
엑셀에서 csv 파일을 읽으면 한글이 깨진 것처럼 보이는 거예요.
그런데 한글이 깨진 것이 아니라 읽어드리는 인코딩이 잘못 지정된 거죠.
이러한 문제를 해결하기 위해서 윈도우는 BOM을 지원합니다.
이 BOM은 파일의 가장 처음에 이 파일이 어떤 인코딩인지를 명시하는 것이거든요.
UTF-8 BOM을 추가하면 한글 엑셀에서도 이 UTF-8 형식으로 CSV 파일을 디코딩을
하기 때문에 한글 깨짐이 없습니다.
그러면 UTF-8 BOM을 추가하려면 인코딩을 UTF-8-SIG라고 쓰시면 돼요
이렇게 쓰시면 생성되는 CSV 파일에 가장 처음에 UTF-8 BOM이 3바이트가 추가됩니다
이렇게 csv 파일 내용을 메모디 파일 객체에 쓰고요 뷰 함수에서 응답을 만들 때 메모디
파일 객체 점 갭 밸류라는 함수를 호출하면 파일의 전체 내용을 지정하실 수 있어요
그리고 응답의 컨텐츠 타입은 텍스트 csv이고 파일 다운로드가 이루어질 수 있도록
Content, Disposition, Header를 지정하고, Attachment,
다운로드 되는 파일명을 지정하시고 리턴하시면 해당 View 함수에 접근하면 이와 같이
동적으로 생성된 CSV 파일 다운로드를 하실 수 있게 됩니다.
슬라이드 하단의 링크로 오시면 이 소스 코드를 확인하실 수 있습니다.
여기에서 Export to CSV, 뷰 함수를 정의하겠고요 코디셋을 하나 만들겠습니다
판다스죠? 판다스는 흔히 PD로 많이 줄여서 씁니다
판다스가 설치가 안 되었죠?
코알먼점 텍스트 파일을 열고요 판다스라고 쓰시고 Alt, Ent 해보시면 최신 버전이 2.1.3 버전이네요
그래서 최신 버전을 설치를 해 주겠고요 소스포드 상단에서 pandas.as_pd라고 흔히 이렇게 줄여서 씁니다
pandas.DataFrame이고요 그냥 쿼디셋을 넘기면 모델 필드들을 데이터 프레임에서 읽어 가지 않아요 
values라고 지정해서 사전 리스트를 지정하시면 모든 모델 필드에 대해서 데이터 프레임이 생성이 되는 것이고요 여기에 랭크나 CSV 파일로 생성되길 원하는
필드명을 지정하시면 해당 필드로만 구성된 CSV 파일을 생성하실 수 있습니다
이렇게 해서 DataFrame 객체를 만들고요 DataFrame.csv 파일명을 지정하실 수도 있겠지만 저는 파일 생성이 아니라 즉시 응답을 주기 위해서 메모리 파일 객체를 하나
만들겠습니다 기타에 담을 것이기 때문에 bytes.io를 하고요 이렇게 하시면 io에 bytes.io를 쓰시면 되겠습니다
여기에 파일이 저장이 되는데 이때 utf-8-sig이 지정되기 위해서 encoding 옵션으로 utf-8.sig라고 씁니다
엔코딩 옵션을 생략하시면 그냥 UTF-8 파일로 저장이 되는 거예요
한글 엑셀에서 여실 목적이 아니시면 이 부분은 생략하셔도 괜찮습니다
exportfile.getValue를 호출하면 이 메모리 파일 객체에 저장된 모든 파일 내용을 리턴하거든요
이렇게 컨텐츠로 넘기시면 이제 CSV 파일 내용으로 응답을 하시는데 이때 컨텐츠 타입으로 파일 내용이 CSV 파일임을 이렇게 지정을 해주겠고 파일 다운로드로 처리될 수 있도록
Content-Disposition 헤더로 이렇게 지정을 해 주겠습니다
위에 오타가 있네요
제거해 주시고 그리고 나서 이제 리스펀스를 이렇게 리턴 하시는 거죠
urls 파일로 지정을 해 주겠습니다
export.csv로 요청이 오면은 이 뷰 함수가 호출되도록 할게요
서버 잘 돌고 있는지 확인하시고요
해당 주소도 요청을 하면 이렇게 파일을 다운로드 하셨고요 이렇게 엑셀에서 CSV 파일을
열어보시면 한글 깨짐 없이 잘 로딩된 것을 확인하실 수 있습니다 앞서서 CSV 파일을
동적으로 생성했었는데요
이번에는 동적으로 엑셀 파일을 생성해 보겠습니다
앞서 구현한 CSV 뷰 함수를 수정해서요 엑셀에 대한 생성 기능을 추가해 주도록 할게요
그리고 urlpatterns에서도 export.csv 뿐만 아니라 export.xlsx라고
해서 두 개의 입장자를 지원하도록 하고 정규표현식 지원을 위해서 aripath 함수를
사용하겠습니다
기존의 export-csv 함수 이름을 바꿔볼게요.
export로 바꾸는데요.
이 함수를 이제 re_path 함수를 쓰겠습니다.
re-pass 함수를 쓰시면 정규 표현식으로 url 패턴을 지정하실 수 있고요.
정규 표현식에서 문자열의 시작과 끝을 꼭 지정해 주셔야 됩니다.
export고, 점은 단순히 점으로 인지되어야 되니까 이렇게 앞에 escape 문자
역슬러시 붙여주시고요.
뷰 함수의 인자로 넘길 값의 패턴을 정리하기 위해서 소괄로 쓰시고 여기에 ?p 그리고 그
인자의 이름을 지정합니다
인자 이름은 format이라고 쓰고요
csv이거나 xlsx 그리고 소괄로가 하나 빠졌네요
export.csv, export.xlx인 경우에만 export 함수가 호출되고 함수
호출될 때 format이라는 이름의 인자로 이 함수가 호출됩니다
이 뷰함수는 Format 인자를 받을 수 있어야 되겠고요.
여기 한번 Type을 써보자면, 타이핑의 니트월드를 통해서 어떤 값이 올 수 있는지 명시할
수 있습니다. 그래서 Format이라는 값은 csv 문자엣이나 xlsx 둘 중에 하나가 올
수 있다고 써주겠고, 포메시아는 값을 가지고 분기를 해 볼 수 있겠죠.
csv일 때, 그리고 포메시 엑셀 x일 때.
돈트브 엑셀에서요.
export 파일에 index, false 이렇게 지정하실 수 있겠고, 인자 이름을 붙여
보자면, pass_or_buff 고요.
여기는. 여기는 Excel Writer라는 인자를 쓰더라고요.
엑셀 파일은 플레인 텍스트 파일이 아니기 때문에 인코딩 옵션이 없어요.
그냥 엑셀 고유 포맷이기 때문에 인코딩이 없습니다.
urls에서 지원할 포맷을 추가하고 뷰 함수에서 구현을 빼먹을 수도 있잖아요.
else까지 넣어주겠습니다.
import도 해주죠.
invalid 포맷, 포맷이라고 응답도 주겠습니다.
엑셀에 대한 컨텐츠 타입과 파일명이 빠져있네요.
그쵸? 컨텐츠 타입을 별도 변수로 이렇게 지정을 해 보겠습니다.
.csv 이고요.
그리고 Excel X에 대해서도 엑셀 파일은 application-vndms-excel
입니다. 파일명도 지정해 주시고 컨텐츠 타입도 이렇게 구현을 마무리합니다.
export.xlx 경로로 요청하셔서 파일을 다운받은 다음에 엑셀로 열어보시면 이렇게
생성된 엑셀 파일을 확인하실 수 있습니다.