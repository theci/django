form-helper instance에서 form-class 속성으로 form 태그의
클래스명을 지정할 수 있고요.
label-class 속성으로 label 태그의 클래스명을 지정할 수 있고요.
field-class 속성으로 각 필드 위젯의 클래스명을 지정할 수 있습니다.
이렇게 Bootstrap5에서 지원하는 클래스명들을 지정하면 각 레이블들이 2대 10 비율로
수평 배치된 레이아웃을 확인하실 수 있습니다.
Bootstrap5에 수평 레이아웃을 적용해 볼 텐데요.
태그에는 class명을 적용하고, 각 레이블 태그에는 class명을 지정하고, 태그에는
class명을 지정합니다.
개발자 도구를 통해 레이블 요소들 찍어보시면 class명이 있죠.
그리고 위젯는 지정한 클래스명이 바로 적용되지 않고 그 위젯을 감싸고 있는 요소에 콜
SM10 클래스명이 적용되어 있습니다.
이 요소를 래퍼라고 부릅니다.
비율을 4 대 8로 변경해 보시면 비율에 맞게 잘 보여집니다.
FormAlpha 인스턴스의 레이아웃 속성을 통해 레이아웃을 보다 세밀하게 구성하실 수
있습니다. 레이아웃 인스턴스의 생성자로 배치할 순서로 필드명들을 나열하고요.
하나의 행에 여러 컬럼으로 필드를 배치하고 싶은 경우 row 레이아웃을 사용해 필드명들을
그룹핑할 수 있습니다.
단순히 필드명을 지정하는 경우 Crispy Bootstrap5의 기본 스타일로 필드가 렌더링
되는데요. 플로팅 필드, 필드, 프리팬디드 텍스트 등의 커스텀 필드 타입을 사용하여 다양한
스타일의 필드로 렌더링하거나 추가 속성을 부여하고 레핑 클래스를 지정함으로써 레이아웃을
더욱 세밀하게 변경할 수 있습니다
앞서 지정한 Form 클래스, Label 클래스, Field 클래스 속성 지정은 제거하고요
레이아웃 속성을 통해 커스텀 레이아웃을 잡아보겠습니다
필드명을 나열하면 나열한 순서대로 필드들이 렌더링됩니다
작성자 필드와 인스타그램 ID 필드는 한 행에 배치하려고 row 레이아웃으로 묶어줬습니다.
그런데 row 지정만으로는 한 행에 배치가 안 되죠.
개발자 도구를 통해 살펴보시면 row 클래스명이 지정된 요소가 있고 그 안에 두 필드가
있는데요. 부트스텝 5에서는 한행에 배치되기 위해 row 클래스뿐만 아니라 자식 요소에는
col-sm6와 같은 클래스명이 지정되어야 합니다.
브라우저 개발자 도구에서 직접 지정해 보면 이렇게 6 대 6 비율로 한행에 배치가 되었죠.
이는 임시 수정일 뿐, 페이지 새로고침하면 다시 렌더링 되기에 이 변경 내역은 사라지고요.
각 폰 필드에 커스텀 옵션을 지정하기 위해서 필드 레이아웃으로 랩핑합니다.
래퍼 클래스 속성으로 col-sm6 클래스명을 지정해주면 각 필드의 래퍼에 col-sm6
클래스가 적용되어 이렇게 한행으로 배치가 됨을 확인하실 수 있습니다.
각 위젯에 추가할 속성은 이렇게 키워드 인자로 지정하시면 바로 적용이 되고요.
기본 django-crispy-forms 라이브 홀리에서 지원하는 Bootstrap에 Pre-Pended Text
레이아웃이 있습니다.
인스타그램 유저 네임 필드에 적용하시고 앞에 매치할 텍스트를 지정하시면 이렇게
Bootstrap에서 지원하는 스타일로 렌더링이 됩니다.
그리고 Crispy Bootstrap 5 라이브러리에서는 플로팅 필드 레이아웃도
제공되거든요. 이를 적용하시면 Label 부분이 떠 있는 것처럼 처리가 됩니다.
Crispy Bootstrap 5 레이아웃에서는 탭 홀더 레이아웃을 지원합니다.
탭 홀더를 사용하면 복잡한 폼이나 많은 수의 필드를 가진 폼을 여러 섹션으로 나누어 관리할
수 있습니다. 각 탭 내에서는 그룹화하고자 하는 필드들을 배치할 수 있으며, 이는 폼의
가독성과 사용자의 입력 과정을 단순화하는 데 도움을 줍니다.
예를 들어, 사용자 개인 정보, 주소 정보, 기타 세부 정보 등을 별도의 탭으로 구분하여
폼을 보다 체계적으로 조직할 수 있습니다.
컨텐트 필드와 컨텐트 EM 필드를 탭 홀더로 묶어보겠습니다.
탭 홀더 생성자 인자로는 탭 인스턴스를 다수 지정하고요.
각 탭 생성자 첫 번째 인자로는 탭의 이름을 지정하고 두 번째 인자로 탭 내에 배치할
필드명들을 다수 지정합니다.
웹페이지 새로고침하시고 탭을 클릭해 보시면 탭을 클릭해도 탭 전환이 안 되는데요.
이는 Bootstrap 5에 Javascript 라이브러리를 아직 추가하지 않아서입니다.
Javascript 라이브러리 주소를 복사해서 템플릿에 적용하시고 새로고침하시면 탭 전환이
잘 이루어짐을 확인하실 수 있습니다.
Crispy Bootstrap 5 라이브러리의 탭 홀더 레이아웃을 사용할 때 탭의
레이아웃이 UI 상에서 끝이 명확하게 표시되지 않아 사용자가 탭 영역의 경계를 식별하기
어렵습니다. 이 문제를 해결하기 위해 탭 홀더 레이아웃의 스타일을 커스터마이징하여 패딩,
보더 스타일을 추가하여 탭 영역의 경계를 사용자가 더 명확하게 인지할 수 있도록 만들어
보겠습니다. 관련 템플릿 파일 코드를 살펴보니 폼 위젯을 감싸고 있는 태그에는 클래스명을
추가할 수 있는 공식적인 방법을 제공해 주고 있지는 않네요
그럼 해당 템플릿 파일의 소스 코드를 복사해서 새로운 템플릿 파일을 만들어야 할 텐데요
그렇게 하면 관리 포인트가 늘어나기에 복사하지 않겠고요 자바스크립트를 통해 클래스명을
추가하는 방법을 사용해 보겠습니다
탭 홀더 코드를 보시면 템플릿 경로가 어떤 템플릿 팩의 레이어 폴더의 tab.html
파일입니다 이 파일이고요 ul
태그 부분이 탭 부분이 보여지는 부분이고 아래 div 부분이 탭 내에 필드들이 보여지는
내용 부분입니다 템 내용이 보여지는 태그의 클래스명은 하드코딩 되어 있을 뿐 커스터마이징
할 수 없도록 되어 있습니다.
코어 폴더 아래의 django-crispy-forms-bootstrap5 폴더에
Layout.py 파일을 생성하고요.
TabHolder 클래스를 상속받은 BoardWordTabHolder 클래스를 정의합니다.
커스텀 템플릿을 지정할 것이고요.
지정 경로의 템플릿 파일을 생성해 주시고 탭 홀더 클래스에서 사용하는 템플릿을 인클루드해
주시고, 자바스크립트를 통해 탭 내용이 보여지는 요소에 클래스명을 다수 추가해 주겠습니다.
해당 요소에 classlist.add 함수의 인자로 추가할 클래스명을 개별 문자열로 인자를
지정해 줘야 하는데요.
클래스명 가독성을 위해 단일 문자열로 한 번에 클래스명을 정의하고, 배열로 변환한 뒤에
스프레드, 전개 연산자를 통해 하나의 배열 안에 여러 문자를 add함수 출시해 개별 인자로
전달하도록 했습니다.
포드워드 탭 홀더 레이아웃으로 변경하고요.
페이지 소고침하면 탭 홀더의 레이아웃에 구분선이 추가되어 UI가 더욱 보기 좋아졌습니다.