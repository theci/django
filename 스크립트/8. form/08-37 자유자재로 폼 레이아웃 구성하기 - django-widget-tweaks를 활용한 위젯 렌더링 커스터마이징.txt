템플릿 단에서는 위젯 렌더링을 변경할 수 없었는데요.
Django Widget Tweaks 라이브러리를 활용하면 각 위젯이 렌더링되는 속성을 변경하실 수 있습니다.
먼저 Django Widget Tweaks 라이브러리를 설치하고 설정합니다.
1.5.0 버전을 설치했고요.
커스텀 Django 템플릿 태그 라이브러리가 제공되기에 Django 앱 등록이 필요합니다.
Django 앱으로 등록하지 않으면 그 앱에 Django 템플릿 태그 라이브러리는 사용할 수 없거든요.
Settings의 Installed Apps List에는 Widget Tweaks 이름의 Django 앱을 추가하면 설치 끝입니다.
requirements.txt 파일에 Django Widget Tweaks Library 1.5.0 버전을 지정해서 설치하고요.
Installed Apps List에는 Widget Tweaks 앱 이름을 추가합니다.
템플릿에서 Django Widget Tweaks 라이브러리를 사용하기 위해 Widget Tweaks 태그 라이브러리를 로드해야 합니다.
Form Instance의 Title Field 렌더링을 예로 들어보겠습니다.
Render Field 템플릿 태그를 사용하면 특정 폰빌드의 다양한 속성을 수정하거나 추가할 수 있습니다.
이처럼 특정 속성을 특정 값으로 덮어쓰기 하실 수도 있고요.
새로운 속성을 추가하실 수도 있고, 기존 속성의 값을 추가하실 수도 있습니다.
물론 여러 속성을 한 번에 추가하실 수도 있습니다.
또한 Add Class를 포함한 여러 템플릿 필터들이 제공되며 필터 체인닝을 통한 여러 속성을 한 번에 추가, 수정 또는 삭제하는 것도 가능합니다
만약 Bootstrap 5와 같은 CSS 프레임워크를 사용한다면 대부분의 경우 Class 속성을 커스터마이징 하는 것만으로도 해당 CSS 프레임워크의 스타일을 충분히 적용하실 수 있습니다
Bootstrap 5 CSS 프레임워크에서는 레이블 요소에는 FormLabel 클래스가, 인풋 요소에는 FormControl 클래스가 있다면 Bootstrap 5 스타일로 보여집니다.
AddLabelClass 템플릿 필터를 적용하여 지정 클래스가 적용된 레이블을 렌더링했고요.
AddClass 템플릿 필터를 적용하여 지정 클래스가 적용된 위젯을 렌더링했습니다.
이처럼 django-widget-tweaks 라이브러리를 사용하여 BootState 5 스타일로 손쉽게 스타일링을 지원할 수 있습니다.
Bootstrap5 css 프레임워크 적용을 위해 Bootstrap5 cdn 주소를 검색해서 추가합니다.
css만 필요하기에 css 주소만 추가했고요.
자바스크립트는 뒤에서 자바스크립트 기능이 필요할 때 추가하겠습니다.
각 태그들의 Bootstrap5에서 지원하는 클래스명들을 지정해서 레이아웃을 잡아주겠고요.
add-label-class 템플릿 필터와 add-class 템플릿 필터 사용을 위해 widget-twigs 태그 라이브러리를 로드하고요
add-label-class 템플릿 필터를 통해 form-label 클래스를 추가한 label 태그를 렌더링하고 add-class 템플릿 필터를 통해 form-control 클래스를 추가한 widget을 렌더링합니다
help-text와 에러 내역에도 텍스트 스타일을 잡아주고요
그럼 이제 Bootstrap5 스타일이 적용된 폼 레이아웃을 확인하실 수 있습니다.