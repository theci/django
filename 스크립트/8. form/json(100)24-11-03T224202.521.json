장고폼을 사용하면 폼 레이아웃 구성에 한계가 있다고 생각하기 쉬운데요 전혀 그렇지
않습니다 장고폼과 위젯 기능을 활용하면서 자유자재로 폼 레이아웃을 구성하는 방법에 대해서
살펴보겠습니다
Django 폼에서는 폼 HTML을 생성해주는 4가지 메서드, asTable, asP,
asUL, asDIV를 지원합니다.
이 메서드들을 활용하여 같은 템플릿 파일을 사용하여 폼 필드 구성에 상관없이 폼을 렌더링할
수 있다는 장점이 있는데요.
하지만 추가적인 CSS 스타일링이 필요하고 각 필드들은 일렬로만 배치가 가능하다는 제약이
있습니다. 하지만 폼 필드 순서는 필드 오더, 클래스 변수를 통해 변경하실 수 있습니다.
블로그 앱의 Form Spy 파일에 데모 폼 클래스 코드를 복사합니다.
FormView 클래스를 활용해서 데모 폼 뷰를 만들고요.
Stable 메서드를 활용하는 템플릿 코드도 복사해서 적용해 줍니다.
블로그의 URL Spy 파일에 URL 패턴도 등록해 주고요.
블로그 데모 주소의 페이지를 열면 이렇게 Table Method을 통해 렌더링된
폼 화면이 보여집니다.
폼 제출을 해보면 이렇게 유효성 검사 에러도 보이죠?
스타일 적용이 시급해 보입니다.
렌더링되는 필드 순서는 Field Order 클래스 변수를 통해 지정하실 수 있습니다.
지정된 필드 순서대로 필드가 렌더링되며, Field Order 리스트에 언급되지 않은
필드들이 그 이후에 렌더링됩니다.
Form Instance를 직접 렌더링할 때 참조하는 4가지 속성이 있습니다.
non-field errors 속성은 특정 필드에 속하지 않은 유효성 검사 에러
리스트이며, 클립 메서드에서 반환된 에러로 구성됩니다.
특정 필드의 에러 리스트는 해당 필드의 errors 속성을 통해 참조하실 수 있습니다.
Form Instance의 전체 에러 리스트는 errors 속성에 담겨 있지만,
Non-Field Errors 속성과 필드별 Errors 속성으로 충분하기에 잘 사용하지는
않는 속성입니다.
히든 필드 속성은 숨겨진 필드 리스트이며, 비저블 필드 속성은 보여질 필드 리스트입니다.
숨겨진 필드의 경우, 화면에 보여지지 않고 값 전달만 하기에 레이블이 필요 없고, 위젯
렌더링이면 충분합니다.
보여질 필드는 비저블 필드 속성을 순위하며 일괄적으로 렌더링하셔도 되고, 커스텀 폼
레이아웃이 필요하실 경우, 개별 필드를 지정하여 하나하나 렌더링하실 수도 있습니다.
커스텀 템플릿을 활용하여 각 폼 필드를 렌더링하는 방식은 레블 태그, 위젯, 도말 텍스트,
오류 메세지 등을 템플릿 레벨에서 쉽게 구성할 수 있게 해줍니다.
이 접근법은 폼 레이아웃에 높은 유연성을 제공하지만 각 폼마다 레이아웃과 스타일을
개별적으로 설정해야 하는 단점이 있습니다.
위젯 렌더링은 위젯 클래스의 책임이 있으며 폼 인스턴스를 렌더링하는 템플릿에서는 위젯
렌더링을 변경할 수 없습니다 폼 인스턴스의 대표적인 속성들을 직접 렌더링 해보고요 히든
필드 속성과 비저블 필드 속성은 그 자체만으로 이렇게 위젯 렌더링이 되진 않습니다
이렇게 필드별로 렌더링을 해줘야 하고요 새로운 템플릿을 만들어서 한 비저블 필드에 대한
렌더링을 커스텀 하겠습니다
Errors 속성에 언더바 올 언더바 키는 Non-Filled Errors
내역입니다.
Errors 속성과 Non-Filled Errors 속성은 그 자체만으로 이렇게 HTML
리스트로 보여지는데요.
커스텀 스타일 위에 순회를 돌면서 레이아웃과 스타일을 잡으실 수 있습니다.
논필드 에러스 속성과 필드별 에러스 속성을 통해 모든 에러가 노출되므로 에러스 속성은
제거하겠습니다.
히든필드 속성은 UI에는 보여지지 않는 숨겨진 필드이므로 레이블이나 헬프텍스트에 대한 노출
없이 위젯 렌더링만 수행하겠고요.
서버단에서 히든필드에 대한 유효성 검사가 있을 경우 에러스 내역을 노출시킬 필요가 있을
수도 있습니다.