안녕하세요. 이번 시간에는 shortcut 함수에 대해서 살펴보겠습니다.
Vue 응답에서는 HTTP response 클래스를 사용하고 필요한 인자를 넘겨 다양한 응답을 처리하실 수도 있지만, HTTP Response 클래스를 상속받아 특정 상황에
맞춰둔 여러 HTTP response subclass들이 있습니다.
Redirect 응답에서는 HTTP Response Redirect 클래스와 HTTP Response Permanent Redirect 클래스가 있습니다.
이 클래스들은 HTTP Response 클래스에서 상태 코드와 커스텀 응답에도 location 헤더 추가만이 구현되어 있습니다.
이동할 주소에서 URL reverse가 필요하다면, 먼저 URL reverse를 수행하고 나서 URL을 계산한 뒤에 HTTP response redirect 클래스들을 사용해야 합니다.
shortcut 함수 중에 redirect 함수는 이를 랩핑하여 편의성과 가독성을 높였습니다.
Permanent 인자에 따라 상태 코드 301, 302 응답을 하고요.
내부에서 resolve_url 함수를 호출하기에 URLReverse를 지원합니다.
게다가 URLreverse를 위해 reverse 함수가 아닌 reverse 함수를 랩핑한 ResolveURL 함수를 사용하기에 URLReverse에 필요한 인자 지정 시에도 코드가 보다 간결합니다.
장고 모델을 구현하면 그 모델에 대한 디테일 페이지를 구현하게 되는데요.
상세 페이지가 호출되기 위한 URL 리버스 코드를 자주 만들게 되는데, 
장고에서는 모델의 디테일 주소 계산을 모델의 get_absolute_url 메서드에서 처리하기를 가이드하고 있습니다. 
그럼 그 모델 인스턴스에 getAbsoluteURL 메서드 호출만으로 디테일 주소 문자열을 계산할 수 있겠죠.
redirect 메서드에서는 첫 번째 to 인자에서 get_absolute_url 속성이 있다면 URL 리버스 과정을 진행하지 않고 
getAbsoluteURL 메서드를 호출해서 그 반환 값을 즉시 반환합니다.
그럼 이 포스트 모델과 같이 get_absolute_url 메서드가 구현된 함수는 redirect 함수 인자로 포스트 모델 인스턴스만 지정하면 포스트 디테일 주소로 이동 응답이 될 것입니다.
그런데 지정 모델 인스턴스에 getAbsoluteURL 메서드 구현이 없다면 이와 같이 타입 에러 예외가 발생합니다.
특정 모델에 대한 디테일 뷰를 구현하신다면 그 즉시 getAbsoluteURL 메서드를 구현하시기를 추천드립니다.
Django에서는 지정 PK나 슬러그의 모델 인스턴스 한 개를 조회하는 경우가 많은데요.
이때 지정 조건의 모델 인스턴스가 없다면 doesNotExist 예외가 발생하게 됩니다.
이 예외를 Vue에서 잡지 않으면 클라이언트에게 서버 오류를 의미하는 상태 코드 500으로 응답하게 됩니다.
지정 조건의 레코드를 조회할 수 없는 것은 서버 오류가 아니라 응답 코드 404의 PageNotFound로 응답해야만 합니다.
그러려면 뷰에서 doesNotExist 예외를 잡아서 HTTP404 예외를 발생시킵니다.
HTTP404 클래스만 exception 클래스를 상속받은 예외 클래스이기에 raise를 통해 예외를 발생시켜 주셔야 하고요.
그 외에 응답 관련 클래스는 모두 HTTP response 클래스를 상속받았기에 return을 통해서 응답 객체를 반환합니다.
HTTP404 예외는 장고 코어의 예외 핸들러에 의해서 상태 코드 404로 처리됩니다.
그런데 매번 이렇게 예외 처리를 해주는 것이 번거롭습니다.
get_object_or_404 함수에서는 위의 예외 처리 코드를 일반화하여 구현되어 있습니다.
인자로 모델 클래스와 코디셋을 지정하실 수 있고요.
모델 클래스를 지정하면 defaultModelManager를 통해 기본 코디셋을 생성해서 처리합니다. 
뷰에서 단일 레코드 조회에서는 get object or 404 함수 사용을 추천합니다.