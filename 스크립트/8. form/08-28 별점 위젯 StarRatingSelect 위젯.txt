평점을 숫자가 아닌 별 아이콘으로 입력받는 방법으로 사용자 인터페이스의 미적 요소를
향상시키겠습니다.
이를 위해 star-rating.js라는 외부 의존성이 없는 라이브러리를 사용하겠습니다.
이 라이브러리는 셀렉트 요소 기반으로 동작하며 사용하기 무척 쉬워요.
StarRating.js 공식 사이트에서 라이브러리를 다운받고요.
현재 버전이 4.3.0이라고 합니다.
이 라이브러리를 CoreApp 폴더 밑에 static 폴더에 복사해 줍니다.
StarRating.js 폴더를 하나 만들고 다운받은 압축 파일에 압축을 풀어서 dist
폴더와 image 폴더를 복사하고요.
dist 폴더명은 버전인 4.3.0으로 변경하겠습니다.
이후에 새로운 버전이 나오면 새 버전의 폴더명으로 복사를 해주고 위젯 클래스에서 참조하는
경로명만 변경해주면 라이브러리 업그레이드는 끝입니다.
라이브러리의 css 파일에서는 상위 경로의 이미지 폴더에서 이미지 파일을 참조하므로
4.3.0 폴더와 같은 경로에 반드시 이미지 폴더가 위치해야 합니다.
StarRating.js Library는 SELECT 요소 기반에서 동작하니깐요
SELECT Widget 클래스를 상속받은 StarRatingSelectWidget
클래스를 정의합니다
그리고 커스텀 템플릿을 지정할 것이고요 그
템플릿에서 사용할 CSS 파일과 JS 파일들을 미디어 클래스로 설정합니다
이렇게 지정해둔 CSS, JavaScript 파일에 대한 HTML 태그는 Form
Instance의 미디어 속성을 통해 렌더링이 되죠.
위젯 템플릿 내에서 CSS 파일, JavaScript 파일에 대한 태그를 직접 작성하지
않는 이유는 위젯 템플릿 내에서 태그를 직접 작성하면 위젯이 사용된 횟수만큼 그 CSS,
JavaScript 태그도 반복되어 지정되는데요.
폼의 미디어 시스템을 활용하면 그 폼 내에서 그 위젯이 여러 번 사용되더라도 중복을 제거한
CSS, JavaScript 태그를 스마트하게 생성해 줍니다
커스텀 템플릿에서는 script 요소의 직전 요소로서 select 요소를 조회하고요
StarRating.js에서 지원하는 옵션을 구성하고 StarRating API를 호출하면
별점 위젯 개발 완료입니다.
리뷰 생성 후에 이동할 주소가 필요하니까 리뷰 모델에 대한
ListDetailEditView를 Class 기반 뷰를 활용해서 빠르게 구현해
주겠습니다. 리뷰
모델에 대한 디테일 뷰를 구현했으니 리뷰 모델 클래스에 getAbsoluteURL 메서드를
구현하여 디테일 주소 문자열을 리턴해 주겠고요.
그럼 ReviewNewView와 ReviewEditView에 successURL 속성을
지정하지 않았으니 저장 후에 getAbsoluteURL 메서드 호출을 통해 디테일 주소로
자동 이동을 할 것입니다.
review_list.html 템플릿을 생성해 주고요.
review_detail.html 템플릿도 생성합니다.
포스트 목록 페이지 링크와 포스트 수정 페이지 링크도 추가하고요.
새로운 리뷰를 생성해 보면 생성된 리뷰의 디테일 주소로 자동 이동하네요.
ReviewList.html 템플릿에는 새 리뷰 쓰기 링크를 추가하겠습니다.
개발자 도구의 네트워크 탭을 열고 새로운 리뷰를 생성해 보시면요.
리뷰 생성 요청에서 레이팅, 별점 필드 값이 이렇게 숫자 12345 값으로 전달됨을
확인하실 수 있습니다.
위젯은 서버에서 받는 값의 포맷, 보내는 값의 포맷은 호환되게 유지하고요.
UI 레벨에서 유저 편의성을 높일 수 있도록 합니다.
별점 위젯에서도 UI는 바뀌지만 서버에서 받는 값을 보여주는 것과 서버로 보내는 값 포맷은
동일할 것입니다.
StarRating 공식 사이트에서 라이브러리를 다운받습니다.
압축을 푸시고요.
dist 폴더와 image 폴더만 복사해서 core, static, core,
StarRating.js 폴더로 복사해 줍니다.
dist 폴더명은 버전인 4.3.0으로 변경하고요.
CSS 파일을 보시면 이미지 참조 경로가 상대 경로로서 부모 경로의 이미지 폴더를 참조하고
있죠. 저 경로에 맞춰 라이브러리를 복사했습니다.
star-rating 라이브러리는 SELECT 요소 기반에서 동작하니까 SELECT
위젯 클래스를 상속받은 star-rating select 위젯 클래스를 정의합니다.
커스텀 템플릿을 사용할 것이고요.
셀렉트 위젯 코드에서 셀렉트 위젯의 템플릿 경로를 확인하고요.
이를 복사해서 템플릿에서 인클루드 해줍니다.
미디어 설정으로 star-rating 라이브러리의 CSS 파일과 JS 파일 경로도
우리가 방금 복사해 놓은 스태틱 파일 경로에 맞게 추가해줍니다.
템플릿에서 직전 셀렉트 요소를 조회하고요 커스텀 옵션 지정 없이 Star Rating
라이브러리를 적용합니다
스타 레이팅 셀렉트 위젯을 리뷰 폼 모델 클래스의 레이팅 필드에 적용해 봅니다.
웹 페이지 새로 고침하시면 이렇게 별점 위젯이 보여지고 별점 입력도 잘 되고요.
수정 시에도 저장된 별점 숫자로 표시가 잘 되고 있습니다.
주석 처리해 놓은 stars 옵션을 적용하시면 SVG 아이콘으로 별점 아이콘을 변경하실 수
있어요. 위젯은 변경되었어도 서버로 전송되는 값은 여전히 동일합니다.