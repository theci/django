인라인 폼셋 팩토리 기능을 장고 어드민의 모델 어드민에서도 기본 지원해주고 있습니다 보다
직관적인 예시를 위해 메모 모델에서 어서 외래키 필드를 제거하고 메모 그룹 외래키 필드를
추가해 주겠습니다
하나의 메모 그룹 내에 다수의 메모를 등록할 수 있는 관계인데요 모델 어드민의 일라인즈
설정을 통해 한 메모 그룹에 대한 수정 폼에서 그 메모 그룹에 속한 메모들에 대한 생성,
수정, 삭제 기능을 제공해 줄 수 있습니다
TabularInline 클래스를 상속받은 메모Inline 클래스를 정의하고
모델 속성으로 관련 모델 클래스를 지정하고 필드 속성으로 모델 폼 필드 리스트를 지정합니다
fk_name 속성으로 관련 외래키 필드명을 지정하는데요
메모 모델에 외래키가 1개인 경우는 생략할 수 있습니다
메모 그룹 모델 클래스를 새롭게 정의하고요 메모 모델에서 author 필드를 제거하고 메모
그룹에 대한 외래키 필드를 추가하겠습니다
makemigrations 명령을 먼저 수행하고 아직 Migrate 명령은 수행하지
않았습니다. 일회성 디폴트 값으로 1을 지정했습니다.
그러면 migrate 시에 메모 그룹에 PK가 1인 레코드가 반드시 존재해야만 합니다.
Migration을 수정해서 메모 그룹에 PK가 1인 레코드를 생성해 줄 수도 있겠고요.
혹은 메모 레코드를 삭제해도 괜찮다면 삭제해서 Migrate 시에 일회성 디폴트 값 지정이
필요가 없도록 할 수도 있겠습니다.
마이그레이션의 첫 번째 오퍼레이션으로 CustomRunPython 오퍼레이션을
추가하고요. 정방향 수행해서 모든 메모 레코드를 삭제토록 합니다.
마이그레이트를 적용하시면 메모 그룹 레코드 없이도 오류 없이 잘 동작하고요.
블로그의 admin.py 파일에서 메모에 대한 TabularInline 클래스를
정의하고요. 메모 그룹 모델을 어드민에 등록해 주세요.
새로운 메모 그룹을 생성하는 폼 화면을 열어보시면 이렇게 메모 그룹에서 네임 필드만
보여지는데요.
aligns 속성으로 메모 TabularInline 클래스를 지정하시면 이렇게 인라인
폼셋이 동작합니다.
메모 더 추가하기 버튼을 클릭하시면 웹브라우저 자바스크립트를 통해 생성 폼을 최대
1,000개까지 동적으로 추가하실 수도 있습니다.
브라우저 개발자 도구를 열어보시면 이렇게 토탈 폼 즉 필드 값이 동적으로 증가되고 있죠.
메모 new 페이지를 열어보면 이제 존재하지 않는 author 필드로 조회하는 코드가
있어서 이렇게 필드에서 예외가 발생합니다.
해당 쿼리셋을 제거하고요.
코드셋 인자는 non으로 지정합니다.
formset.save 메서드를 호출 시에 commit 참 인자를 지정하여 모델 폼셋의
자동 생성, 수정, 삭제 기능을 그대로 활용하겠습니다.
특정 메모 그룹 내에 메모만 관리할 목적으로 inlineformset_factory를
사용하겠습니다.
Parent 모델, 부모 모델 클래스로 메모 그룹 클래스를 지정하고요.
메모 New View 이름을 메모 폼으로 변경하고 URL에서 메모 그룹 PK를 인자로
받아서 해당 메모 그룹 내에 메모만 수정할 수 있고 생성할 수 있도록 하겠습니다.
부모 인스턴스는 메모 그룹 모델에서 PK로 조회하여 지정합니다.
PK1로 페이지를 열어보니 메모 그룹 PK1 그룹에 속한 메모가 보여지고 있습니다.
인스턴스 변수명이 너무 일반적이어서 메모 그룹 이름으로 고치고요.
템플릿에서도 메모 그룹명을 노출해 주겠습니다.
이제 그룹 단위로 메모를 손쉽게 관리할 수 있게 되었습니다.