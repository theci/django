DatePickerField, ModelField를 만들어 보겠습니다.
minValue, maxValue 인자를 받아서 유효성 검사를 자동으로 추가하고 관련
폼 필드로서 DatePickerField, 폼필드를 사용합니다.
DateField, ModelField의 폼필드 메서드에서는 DateField, 폼필드
클래스로 폼필드 인스턴스를 생성하는데요.
폼필드 메서드를 재정의해서 DatePickerField, 폼 필드 인스턴스를 생성하도록 하고
생성자로 minValue, maxValue 키워드 인자를 추가로 전달합니다
그럼 Form 인스턴스 내부에서 유효성 검사 함수도 추가할 테고
DatePickerInput, Widget 인스턴스에 minDate, maxDate 인자로
지정이 되겠죠 이제 DatePickerField, ModelField을 사용하는 것만으로
모델단에서 날짜에 대한 최소값, 최대값 유효성 검사를 지원하게 되었고
DatePickerInput, Widget도 별도 지정 없이 사용할 수 있게 되었습니다
프로필 모델 클래스에서 birthDate 필드를 Date 필드에서
DatePickerField 모델 필드로 변경하고요.
minValue, maxValue 인자를 지정합니다.
birthDate 폼 필드에 대해 minDate, maxDate 설정 외에 다른 커스텀
설정이 필요한 경우에만 DatePickerInput Widget 인스턴스를 직접 생성하고
DatePickerOptions 인스턴스를 통해 옵션을 지정하도록 합니다.
프로필 폼 모델 폼 클래스에서 myDate 폼 필드는 제거하고요.
데이터 필드 모델 필드를 상속받은 데이터 픽셀 필드 모델 필드를 새롭게 정의합니다.
생성자를 재정의하는데요.
추가로 min-value 인자와 max-value 인자를 지원토록 하고 각 값에 맞춰
유효성 검사 함수도 추가해줍니다.
폼필드 메서드를 재정의해 주고요.
DateField, ModelField에서는 DateField 폼필드 클래스를 통해 폼필드
인스턴스를 생성해 주고 있네요.
DatePickerField, ModelField에서는 DatePickerField 폼필드
인스턴스가 생성이 되도록 폼 클래스 인자를 지정해 줍니다.
폼필드 부모 클래스 정의를 찾아 들어가면 필드 클래스 구현부까지 가는데요.
키워드 인자를 default 이름의 사전과 합치고 form 인스턴스 생성 시에 키워드
인자로 그대로 활용이 되고 있습니다.
그러니 DatePickerField 클래스의 폼필드 메서드에서 부모의 폼필드 메서드 호출
시에 추가로 지정하는 minValue, maxValue 인자로 DatePickerField
폼필드 클래스의 생성자로 전달이 될 것입니다.
이제 DatePickerField, ModelField 구현이 끝났고요.
프로필 모델의 VerseDateField를 DateField에서
DatePickerField로 변경해 주고요.
프로필 폼, 모델 폼에서 VerseDateField에 대한 위젯 설정을 제거합니다.
프로필 수정 폼, 웹페이지를 새로 고침하면 모델 폼에서 별도 설정 없이도 프로필 모델에서
DatePickerField, ModelField 지정만으로 DatePickerInput
위젯으로 동작하고요.
MinValue, MaxValue 인자를 지정하면 그에 맞춰 위젯의 minDate,
maxDate 설정도 전파되고 minValue, maxValue 범위에 유배되는 값을
전달받으면 이렇게 유효성 검사 에러도 발생시킵니다.
DatePickerInput 위젯에서 minDate, maxDate 설정 외에 추가로
커스텀 지정이 필요한 설정이 있다면 이렇게 DatePickerInput 위젯 클래스의
인스턴스를 생성하면서 DatePickerInputOptions 인스턴스를 통해 필요한
설정을 추가해 주시면 됩니다.
프로필 모델에서 볼 스테이트 필드에 대한 변경이 있었으니 마이그레이션도 필요합니다.