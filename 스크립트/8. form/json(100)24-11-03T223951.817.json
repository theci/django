안녕하세요. 이번 시간에는 Django에서 기본 제공하는 다양한 폼필드들에 대해서 예시와
함께 자세히 살펴보겠습니다.
불리한 폼 필드는 참거짓값을 다루는 필드이며, 약관 동의 필드나 공개 여부 필드로 사용할 수
있습니다. 디폴트 위젯은 체크박스 인풋이며, 인풋 타입 체크박스 요소로 렌더링됩니다.
인풋 타입 체크박스 요소는 체크하면 서버로 온 문자열을 전송하고, 체크하지 않으면 빈
문자열을 전송합니다.
Required 참 설정을 하면 필수 필드로서 반드시 체크되어야만 유효성 검사에 통과하기에
약관 동의 필드에 적합합니다.
BooleanField, ModelField에서 BooleanField,
FormField가 디폴트로 사용되어집니다.
ErrorMessages 인자는 FormField 내부의 디폴트 에러 메시지 문자열을
재정의할 목적으로 사용합니다.
대개의 폼필드에서는 Required 키로 필수 값 지정에 대한 에러 메시지를 커스텀할 수
있으며, Invalid 키로 부적합한 값 지정에 대한 에러 메시지를 커스텀할 수 있습니다.
CharacterField 폼필드는 문자열 입력을 다루는 필드입니다.
포스팅 제목이나 포스팅 내용 필드에 적합하고요.
Widget에 따라 한 줄 입력 또는 여러 줄 입력을 받을 수 있습니다.
디폴트 위젯은 텍스트 인풋으로서 한 줄 입력을 받는 인풋 타입 텍스트 요소로 렌더링 되고요
텍스트area 위젯을 사용하면 여러 줄 입력을 받는 텍스트area 요소로 렌더링 됩니다
문자열 입력은 입력의 기본이 되기에 많은 모델 필드에서 디폴트 폼필드로 사용합니다.
슬러그는 URL 친화적인 포맷의 문자열을 뜻하며 슬러그 필드는 캐릭터 필드 기반에서
Slug 패턴 문자열임을 검사하는 유효성 검사 함수가 추가된 폼필드입니다.
그 외에 특별한 기능은 없습니다.
Allow Unicode 인자를 지원하는데요.
디폴트로 거짓입니다.
거짓일 때에는 알파벳 슬러그 패턴으로 유효성 검사를 하고요.
참일 때에는 유니코드 슬러그 패턴으로 유효성 검사를 합니다.
캐릭터 필드 기반이니까 좌우 공백 제거가 기본 동작하고 디폴트 위젯은 텍스트 인풋입니다.
슬러그 모델 필드의 기본 폼 필드로써 사용이 되고요.
유저가 슬러그 값을 직접 입력하는 경우는 드물고, 다른 필드로부터 슬러그 포맷으로 변환된
값을 저장하는 경우가 많습니다.
코드를 통한 변환에서는 Django에서 지원해주는 slugify 함수를 활용하거나,
어드민의 모델 어드민에서 prefulatedField 속성을 활용해서 슬러그 필드의 입력
소스 필드를 지정하면, 입력 HTML 폼에서 해당 필드 값을 입력하면 실시간으로 슬러그
필드의 변환된 값이 레귤러 익스프레션 필드는 캐릭터 필드 기반의 폼필드입니다.
인자로 정규표현식을 받고, 유효성 검사 시에 정규표현식 매칭 여부를 검사합니다.
디폴트 위젯으로 텍스트 인풋이 사용되고요.
정규표현식 패턴은 서버 단에서 유효성 검사 시에만 사용되고, 클라이언트 단에서는 사용되지
않습니다.
클라이언트 딴에서 자바스크립트를 통한 정규표현식 검사를 하려면 자바스크립트를 사용하는
커스텀 위젯을 만들어서 적용해 볼 수 있습니다.
GenericIPAddress 필드로 캐릭터 필드의 폰 필드이며 IP Ver.4,
Ver.6에 대한 유연성 검사를 수행합니다.
댓글 작성자 IP의 경우에는 유저 입력을 받지 않고 서버 딴에서 지정해서 저장하기에 폰
필드로 사용하기는 적합하지 않고요.
서버 목록을 관리할 때 서버 IP를 입력받을 용도로 적합합니다.
이메일 필드로 캐릭터 필드 기반의 폼필드이며 이메일 포맷에 대한 유효성 검사를 수행합니다.
RFC 3696의 의거에서 최대 길이 320자로 디폴트 제한하고 있습니다.
디폴트 위젯으로 이메일 인풋이 사용되며 인풋 요소에서 타입만 이메일로 지정되고요.
브라우저에 의해 이메일 유효성 검사가 수행될 수 있습니다.
URL 필드로 캐릭터 필드 기반의 폼필드이며 URL에 대한 다양한 유효성 검사를
수행합니다. 최대 길이 2048자 초과 여부를 검사하고요.
URL에 적합하지 않은 탭, 케이지 리턴, 계획 문자의 포함 여부도 검사하고요.
허용된 URL 스킴인지도 검사합니다.
디폴트 허용 URL 스킴은 http://https, ftp://ftps 입니다.
URL의 도메인이 IDN, 국제 도메인 이름 표준에 적합한지도 검사하고요.
IP의 경우 IP Ver.4, Ver.6 여부도 검사합니다.
RFC-1034의 의거에서 호스트명 253자 초과 여부도 검사합니다.
입력 값에 스킴이 없다면 HTTP 스킴을 자동으로 추가해 주고요 디폴트 위젯으로 URL
인풋이 사용되며 인풋 위젯 기반으로 인풋 요소의 타입만 URL로 지정되고 IP를 입력 받을
땐 사설 IP만을 입력 받고 싶다면 이와 같이 사설 IP를 검사하는 유효성 검사를 구현해
볼 수 있습니다
파이썬 기본의 IP 주소 모듈을 통해 사설 IP 여부를 알 수 있거든요
IntegerField 폼필드는 CharacterField 폼필드와 함께 다양한 목적으로
사용하는 폼필드입니다.
지정 범위의 정수, 지정 배수 단위의 정수를 입력 받을 수 있습니다.
MinValue 인자로 최소값을, MaxValue 인자로 최대값을, StepSize 인자로
배수값을 지정하여 유효성 검사를 수행하고요.
입력된 값은 정수 타입으로 변환됩니다.
Default Widget으로 Number Input이 사용되고요.
인풋 요소의 타입 속성에는 넘버가 지정되고, 브라우저에 넘버 유효성 검사 및 넘버 키보드
레이아웃이 제공될 수 있습니다.
데이터베이스의 컬럼 타입으로 다양한 정수 타입들이 있기 때문에 그에 맞춰 다양한 모델
필드들이 제공이 됩니다.
그에 반해 파이썬 언어에서는 정수 타입은 인트 한 개뿐이죠.
폼필드에서는 인티저 필드 한 개만 제공되는 것입니다.
데시말 필드와 플로트 필드는 둘 다 소수점을 다룰 수 있지만 금융에서처럼 정확한 소수점
계산이 필요한 영역에서는 데시말 필드를 사용하고요 약간의 오차가 허용되지만 빠른 계산이
필요한 대부분의 영역에서는 플로트 필드를 사용합니다
데시말 필드와 플로트 필드는 둘 다 인티저 필드 기반의 폼 필드이고요 값 변환 시에 데시말
필드는 데시말 객체로 변환하고 플로트 필드는 플로트 타입으로 변환합니다 데시말 필드는
대시말 객체에서 지원하는 맥스 디지트 인자를 지원하며 플로트 필드는 인티저 필드처럼 허용
최소값, 허용 최대값, 배수값 인자를 지원합니다.
대시말 플러트에 대한 구별은 파이썬 서버단에서만 이루어지며, HTML 폼에서는 동일하게
인풋 요소의 Type Number로 입력받습니다.
날짜와 시간을 다루는 폼필드는 총 4개입니다
데이트 필드 폼필드는 날짜를 다루고요 구독 만료일 등의 날짜 입력을 다루기에 적합합니다
년, 월, 일 포맷의 문자열에 대한 유효성 검사를 수행하고 데이트 객체로 변환합니다
디폴트 위젯으로 데이트 인풋이 사용되지만 텍스트 인풋 위젯과 동작이 거의 동일하고요 인풋
요소에 타입 텍스트 요소가 사용됩니다
관련 모델 필드로는 데이트 필드 모델 필드가 있습니다 인풋 타입에 데이트가 지정되면
웹브라우저에서 데이트 피커를 지원해 줍니다.
그런데 웹브라우저마다 다른 UI가 제공되거든요.
일관된 UI도 데이트 피커를 제공하려면 커스텀 위젯 구현이 필요한데요.
데이트 피커 인풋, 커스텀 위젯은 커스텀 위젯 수업에서 다뤄보겠습니다.
타임필드 폼필드는 시간을 다루고요.
가계 개점 시간, 폐점 시간 등의 시간 입력을 다루기에 적합합니다.
허용하는 입력 값 포맷으로서 시분초, 시분초 밀리세컨드, 그리고 시분이 지원되어 유효성
검사를 수행하고 타임 객체로 변환합니다
디폴트 위젯으로 타임 인풋이 사용되지만 텍스트 인풋 위젯과 동작이 거의 동일하고요 인풋
요소에 타입 텍스트 요소로 렌더링 됩니다
타임 필드 모델 필드에서 타임 필드 폼 필드를 사용합니다
데이트 타임 필드, 폼 필드는 날짜와 시각을 동시에 다룹니다
비행 출발 시간, 도착 시간 등의 입력을 다루기에 적합하고요 날짜와 시간을 통합한 문자열
포맷으로 유효성 검사를 수행하고 데이트 타임 객체로 변환합니다
디폴트 위젯으로 데이트 타임 인풋 위젯이 사용되지만 텍스트 인풋 위젯과 동작이 거의
유사하고 문자열로 날짜와 시간을 입력 받습니다
입력 포맷이 복잡하고 길어서 유저가 입력하기 번거로울 수 있는데요.
Admin에서는 Split Date Time 위젯을 상속받은 AdminSplitDate
Time 위젯을 통해 날짜 위젯과 시각 위젯을 따로 입력 받도록 사용자 편의성을
높였습니다. 장고 기본에서는 타임존 지원을 통해 유저마다 다른 타임존을 설정할 수 있습니다
타임존 설정에 대해서는 슬라이드 하단의 장고 공식 문서를 참고해 주세요
프로젝트에 타임존 미들리어가 구현되어 있지 않다면 디폴트로 Settings의 타임존 설정이
디폴트 타임존으로 사용됩니다 장고 프로젝트 세팅스의 useTZ 설정으로 타임존 지원이
디폴트 활성화 되어 있는데요
타임존 지원이 활성화 되어 있는 경우 데이트 타임 객체로 변환 시에 타임존은 유저의 현재
타임존을 활용합니다
DurationField, FormField는 시간 범위를 다룹니다
작업 소요 시간 및 운동 지속 시간 등의 입력을 다루기에 적합합니다.
기본 입력 포맷으로 Django Duration 포맷과 ISO 8601 포맷, 그리고
PostgreSQL의 DateTimeInterval 포맷을 지원하고 TimeDelta
객체로 변환합니다.
디폴트 위젯으로는 TextInput 위젯이 사용됩니다.
관련 모델 필드로 DurationField, ModelField가 있습니다.