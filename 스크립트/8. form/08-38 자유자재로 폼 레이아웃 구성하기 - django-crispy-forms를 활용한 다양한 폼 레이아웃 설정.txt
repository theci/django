장고 위젯 트윅스 라이브 올리는 강력하지만 폼마다 일일이 템플릿 구성을 해줘야 합니다
장고 크리스피 폼스 라이브 올리드 사용하여 템플릿 코드는 동일하게 사용하되 위젯 렌더딩
커스터마이징 및 폼 레이아웃을 자유자재로 구성하는 방법에 대해서 살펴보겠습니다
Django Crispy Forms 라이브러리를 버전 2.1로 설치했습니다.
Django Crispy Forms 라이브러리에서는 다양한 템플릿 스타일을 지원하는데요.
기본에서는 Uniform, Bootstrap 3, Bootstrap 4 CSS 프레임워크만을
지원합니다.
Bootstrap 5 지원을 위해 Crispy Bootstrap 5 라이브러리를 설치해줍니다.
Settings의 Installed Apps List에는 Crispy Forms와
Crispy Bootstrap 5를 추가해 주고요 뒤에서 템플릿 백의 템플릿 파일들을
재정의하여 커스텀 필드를 구성할 텐데요
그 템플릿 파일들을 생성할 Crispy Bootstrap 5 Ext 앱도 추가합니다
커스텀 필드의 템플릿 파일들을 생성만을 위한 앱이며 템플릿 파일 외에 모델 등의 다른
파일들은 생성하지 않을 것입니다
Requirements.txt 파일에 Django Crispy Forms 라이브러리를
지정해서 설치하고요.
Installed Apps List에는 Crispy Forms 이름과 Crispy
Bootstrap 5 이름을 추가합니다.
Custom Crispy Layout과 Field 구현을 위해 Core & 밑에
Crispy Bootstrap 5 Extension 폴더를 만들고 Installed
Apps List에 등록합니다.
이 폴더 아래에 Templates 폴더를 만들고 Custom Crispy Layout
템플릿 파일을 생성해서 사용할 것입니다.
Crispy Boot Step 5 템플릿 팩을 사용하기 위해 Crispy Allowed
Template Pack List 설정과 Crispy Template Pack 설정에
Boot Step 5를 추가해 주시면 설정 끝입니다.
템플릿에서는 Crispy-forms 태그 라이브러리 태그 라이브러리를 로드하고 Crispy 템플릿
태그 출시에 첫 번째 인자로 Form Instance, 두 번째 인자로 Form
Helper Instance를 받습니다.
Form Helper Instance는 고정된 성격이라면 클래스 변수로서 생성하셔도
되고요. 동적인 성격이라면 해당 Form 클래스 생성자 내에서 생성하셔도 됩니다.
Form Instance의 Helper 이름의 속성을 통해서 Form Helper
Instance만 참조할 수 있으면 됩니다.
폼엘퍼에는 폼액션 속성을 통해 폼태그의 액션 속성을 지정할 수 있고요.
디폴트로 빈 문자열입니다.
폼태그 속성을 통해 폼태그 자동 생성 여부를 지정할 수 있고요.
디폴트 값은 참으로서 폼태그를 자동으로 생성해줍니다.
장고 기본에서는 폼태그를 템플릿단에서 수동으로 매번 생성해줬어야 했습니다.
disable CSRF 속성을 통해 CSRF 토큰 필드 추가 여부를 지정할 수 있고요.
디폴트 값은 거짓으로서 자동으로 추가해줍니다.
장고 기본에서는 CSRF 토큰 템플릿 태그를 매번 수동으로 추가해줬어야 했습니다
그리고 Attribute 속성으로 Form 태그의 속성들을 임의로 설정할 수 있고요
AddInput 메서드를 통해 FormSubmit 버튼을 추가하실 수 있습니다
정말 Form 구성이 필요한 레이아웃을 포함한 모든 설정들을 Form 클래스 단에서 지정할
수 있게 되었습니다
Crispy 템플릿 태그를 통해 Form 인스턴스를 렌더링 해보겠습니다
템플릿에서는 crispy 템플릿 태그를 호출하면서 첫 번째 인자로 form 인스턴스만
넘기면 되고요 커스터마이징을 위해서는 두 번째 인자로 Form Helper 인스턴스를 넘기면 됩니다.
폼과 직접적으로 관련된 폼 헬퍼 인스턴스이므로 폼 클래스에 클래스 변수나 인스턴스 변수로
생성하시면 폼 인스턴스를 통해 참조할 수 있으므로 편리합니다.
슬라이드에서는 클래스 변수로 생성했었지만 실습에서는 인스턴스 변수로 생성해보겠습니다.
폼 인스턴스마다 폼 헬퍼 설정이 달라지는 부분이 있다면 이렇게 인스턴스 변수 방식으로
생성해 주셔야 합니다.
페이지 새로 고침하시고 페이지 소스 보기 해 보시면 이렇게 폼 태그와 CSRF 토큰까지
모두 잘 렌더링이 되어 있음을 확인하실 수 있습니다.
form action 속성은 form 태그의 action 속성을 지정하고요.
default로 빈 문자열입니다.
form 태그 속성은 form 태그 자동 생성 여부이고요.
default로 참입니다.
disable CSRF 속성은 CSRF 토큰 적용 비활성화 여부이며, default로
거짓이고요.
attribute 속성으로 form 태그의 추가 속성을 지정할 수 있습니다.
addInput 메서드로 input 요소를 추가할 수 있고요.
submitLayout으로 form 제출 버튼을 추가합니다.
상황에 따라 폼 태그 자동 생성이 필요 없을 때도 있거든요
그때는 폼 태그 속성을 거짓으로 설정해 주시면 됩니다
그럼 이렇게 따로 폼 태그를 생성해 줘야겠죠
Submit 버튼에 대해 Name과 Value를
지정했는데요. 다른 인풋 요소와 마찬가지로 해당 Name과 Value 값으로 폼 전송이
이루어집니다. 이는 예를 들어 저장 버튼, 삭제 버튼처럼 Submit 버튼을 열어두어
Value 값에 따라 다른 처리를 하실 수도 있습니다.