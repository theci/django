이번에는 유효성 검사 성공 후에 이동할 주소를 동적으로 변경하는 예시를 살펴보겠습니다.
함수 기반 뷰에서는 유효성 검사 성공 후에 이동할 주소 응답을 redirect 함수를 통해
생성하시면 편리하고요.
URL 문자열을 직접 조합하시거나, URL 리버스를 통해 URL 문자열을 생성하시거나,
관련 모델에 get_absolute_url 메서드가 구현되어 있는 경우, 이를 호출하여 URL
문자일을 생성하실 수 있습니다.
CreateView에서도 동일한 방법으로 이동 응답을 하실 수 있는데요.
CreateView에서는 get_success_url 메서드를 통해서 성공 유하될 문자열을
생성합니다.
폼 유효성 검사 메서드에서는 getSuccess 유하될 메서드에서 모델 인스턴스를 참조할 수
있도록 object 멤버 변수로 모델 인스턴스를 저장하고요.
부모의 폰빌리드 메서드를 호출합니다.
그럼 getSuccess 유하될 메서드에서는 object 멤버 변수를 참조하여 이동 응답을
생성하고요.
CreateView의 getSuccessURL 기본 구현에서는 object 멤버 변수에서
getAbsoluteURL 메서드가 있다면 이를 호출하는 구현이 포함되어 있으니 모델
클래스에 getAbsoluteURL 메서드가 구현된 상황이라면 get_success_url
메서드를 구현하지 않으셔도 됩니다.
업데이트 뷰에서는 getObject 메서드를 통해 조회된 모델 인스턴스를 object 멤버
변수로 저장하고요.
getSuccessURL의 기본 구현에서 createView처럼 object 멤버 변수의
getAbsoluteURL 메서드를 호출토록 구현되어 있습니다.
포스팅 생성이나 수정 후에 포스트 디테일 페이지로 이동토록 해보겠습니다.
먼저 간단하게 포스트 디테일 뷰를 구현하겠습니다.
웹 로그에 pk 주소로 요청이 들어오면 포스트 언더바 디테일 뷰가 호출되어 응답을
처리합니다.
크레이트뷰의 폰밸리드 구현을 보시면 getSuccess 유효될 메서드를 호출하여 이동할
주소를 계산하고 있습니다.
그러니 getSuccess 유효될 메서드를 재정의해서 동적으로 이동 주소를 계산해서
반환하겠습니다.
이렇게 URL 문자외를 직접 조합해 볼 수 있겠고요.
CreateView의 폰밸리드 구현을 보시면, 오브젝트 멤버 변수의 모델 인스턴스를 저장하고
나서 바로 getSuccessURL 메서드를 호출하고 있죠.
그러니, 오브젝트 멤버 변수도 현재 모델 인스턴스를 참조하실 수 있습니다.
폰밸리드 구현에서도 일관되게 오브젝트 멤버 변수의 모델 인스턴스를 대입하도록
수정하겠습니다.
이번에는 urlReverse를 활용해서 url 문자열을 계산하실 수 있고요.
reverse 함수를 wrapping한 resolveURL 함수를 활용해 봤습니다.
모델 인스턴스에 getAbsoluteURL 메서드가 있다면 이를 호출해서 url 문자열
계산을 위임할 수도 있습니다.
포스트 모델에 getAbsoluteURL 메서드를 구현해 줍니다.
ResolveURL 메서드에서는 지정 인자에 getAbsoluteURL 속성이 있다면 이를
호출하는 기능이 있으니 코드를 이렇게 써보실 수도 있고요.
CreateView의 GetSuccessURL 기본 구현에서는 SuccessURL 속성이
없을 때 Object 멤버 변수에 GetAbsoluteURL 메서드가 있다면 이를 호출하는
기능이 있으니 GetSuccessURL 메서드 재정의를 전혀 하지 않으셔도 됩니다.
SuccessURL 속성도 제거해 주시고요.
이제 새로운 포스팅 생성 후에 포스트 디테일 페이지로 자동 이동함을 확인하실 수 있습니다.
이후에도 각 모델에 대한 디테일 뷰를 구현하신다면 그 모델 클래스에
getAbsoluteURL 메서드도 즉시 구현해 주세요.
PostUpdateView 구현에서는 Success URL 속성만 제거해 주시면 위
PostCreateView와 동일한 동작으로 저장 후에 포스트 디테일 페이지로 이동을 하게
됩니다.