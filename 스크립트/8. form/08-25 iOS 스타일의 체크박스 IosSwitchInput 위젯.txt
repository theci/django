이번에는 iOS 스타일의 체크박스를 만들어 보겠습니다
CSS만으로 인풋 타입 체크박스의 스타일을 변경할 수 있습니다
참고 사이트의 CSS를 참고해서 작성해 봤고요
체크박스 인풋 위젤에서 HTML로 렌더링되는 인풋 요소에 클래스 속성에 클래스명만 추가하는형태로 구현해 보겠습니다
위젤 클래스의 생성자를 재정의해서 기본 속성 값에서 클래스 속성을 조회하고
iOSFormSwitch 클래스명을 추가합니다 사용할 CSS 코드는 템플릿이 아닌 별도의
정적 파일에 저장해두고 로딩하도록 하겠습니다.
각 위젤에서는 미디어 클래스를 통해 그 위젤에서 의존성 있는 CSS 파일과
JavaScript 파일의 경로를 명시할 수 있습니다.
Django에서는 CSS와 JavaScript 같은 정적 파일들은 App Directory
밑에 Static Directory에 넣어두면 Django 개발 서버에 의해 자동으로
서빙됩니다.
주의하실 부분은, 템플릿 폴더의 각 템플릿 파일은 템플릿 엔진에 의해서만 참조가 될 뿐, CSS 파일과 JavaScript 파일 서빙을 지원하지 않습니다.
그러니 절대 CSS 파일과 JavaScript 파일을 템플릿 폴더에 넣으시면 안 되고요.
Django는 정적 파일 스태틱 서빙 기능을 지원합니다.
CSS와 JavaScript 파일은 앱 폴더 밑에 스태틱 경로에 넣으시면 됩니다.
위젤에서 의존성이 있는 CSS, JavaScript 파일에 대한 링크 태그와 스크립트
태그는 Django 폼 인스턴스의 미디어 속성을 통해 자동으로 생성됩니다
폰 템블릿 내에 꼭 추가해 주세요
웹 로그의 포스트 모델에 불리한 모델 필드가 없으니 하나 추가해 주겠습니다
Make Migrations 웹 로그 명령으로 마이그레이션 파일을 생성하고, Migrate
웹 로그 명령으로 마이그레이션 파일을 적용합니다
PostForm, ModelForm에 IsPublic 필드를 추가해 보시면 디폴트 위젯으로
이렇게 체크박스가 보여집니다
이제 위젯을 구현해 보겠습니다
체크박스 인풋 클래스를 상속받은 IosSwitchInput 클래스를 정의합니다
체크박스 인풋 클래스의 생성자 코드를 보시면 Attributes 인자와 Checked
인자를 사용하네요
그 인자 구성 그대로 생성자를 정의하고 부모 생성자 호출 시에 인자도 그대로 전달합니다
Attributes 사전 인자는 위젯 렌더링 시에 인풋 요소의 속성으로 사용이 되는데요
클래스 속성에 IosFormSwitch 클래스명을 추가하겠습니다
Attributes 인자가 None이라면 빈 사전으로 변환하고요 Attributes 사전에서 클래스 키가 없다면 
빈 문자열로 반환하고 HTML에서는 각 클래스마다 띄어쓰기로 구분을 하니 띄어쓰기로 추가해줍니다
Postform 모델 폼에서 IsPublicField의 Widget을 IosSwitchInput으로 변경해 봅시다 
지금까지 구현은 클래스명만 추가했죠
클래스명이 잘 추가되었는지 확인해 봅니다
브라우저 개발자 도구로 찍어보니 IosPhoneSwitch 클래스명이 잘 추가되어 있네요
Widget의 미디어 속성으로 의존성 있는 CSS 파일 경로를 지정하겠습니다
제공해 드린 IosPhoneSwitch CSS 파일을 지정 경로에 복사합니다
경로명을 잘 확인해서 복사해 주세요
저장된 경로명에서 코어 static 아래의 경로가 우리가 코드에서 사용하는 경로명입니다
템플릿에서는 App Directory 밑에 템플릿 아래의 경로를 뷰에서 지정하는 것과 유사합니다 
경로를 복사해서 IosSwitchInput 클래스의 css 경로에 적용합니다
이 경로를 웹브라우저에서 로컬 호스트 8000 static 주소 뒤에 붙여서 요청해 보시면 해당 CSS 파일을 Django가 읽어서 응답을 주고 있음을 확인하실 수 있고요 이
static 파일 서빙 기능은 우리가 뷰를 통해서 구현한 것이 아니라 Django 런서버, 개발 서버에서 개발 편의성을 위해서 제공해 주는 것입니다 
실 서비스에서는 Django 개발 서버를 사용하지 않기에 이 기능을 사용할 수 없고 
Nginx 웹 서버나 아마존 웹 서비스 S3 서비스 등을 통해 서빙되도록 설정할 것입니다
Postform HTML 템플릿에서 Form이 의존하고 있는 CSS 파일에 대한 태그, JavaScript 파일에 대한 태그가 추가되도록 Form의 미디어 속성을 렌더링합니다
오타가 있었어요
메타를 미디어로 수정하고요 
새로고침하시면 이렇게 CSS 파일에 대한 링크 태그가 생성됨을 확인하실 수 있고요 
웹페이지에서도 새로고침하시면 이렇게 iOS 스타일의 체크박스가 보여집니다 
클릭하면 애니메이션으로 ON, OFF가 토글되고요 저장하시고 수정에 들어가셔도 저장된 체크 여부로 스타일이 잘 보여지고 있습니다