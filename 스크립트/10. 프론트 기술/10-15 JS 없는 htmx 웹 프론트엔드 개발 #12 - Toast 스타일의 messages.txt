이번에는 htmx를 통한 응답에서 장고 메시지를 토스트 스타일로 보여주도록 개선해
보겠습니다. 각 템플릿에서 bootstrap-messages 템플릿 태그를 제거하고, 장고
메시지를 소비하여 bootstrap-toast-messages로 보여지는
__messages-as-toast.html 템플릿을 인클루드합니다.
그리고 매 htmx에서도 토스트 메시지 노출이 되도록 DOM-content-loaded
이벤트를 제거해줍니다.
그러면 HTMX를 통한 저장 이후에 토스트 스타일로 장고 메시지가 잘 보여지는데요.
버그가 하나 있습니다.
BootState 5에서는 하나의 토스트 컨테이너 안에 여러 토스트 요소를 누적하는
방식으로 여러 토스트 메시지를 보여주는데요.
현재 구현에서는 각 토스트 메시지마다 토스트 컨테이너가 생성되고요.
그로 인해 토스트 메시지가 여럿 있어도 같은 위치에 겹쳐 보여지기에 메시지가 한 개만
보여지는 버그가 있습니다.
이는 다음 슬라이드에서 해결해 볼게요.
현재 태그는 저장하면 이렇게 정적인 스타일로 성공 메시지가 보여지고 있습니다.
이를 toast 메시지로 구현해 볼게요.
블로그 앱의 템플릿에서 bootstrap-messages 템플릿 태그를 제거하고,
장고 메시지를 toast 메시지가 보여주는 코드가
구현된__messages-as-toast.html 템플릿을 인클루드합니다.
그런데 태그를 수정하고 저장하면 toast 메시지가 보여지지 않는데요.
messages-as-toast.html 템플릿 내에서
DOM-content-loaded 이벤트 발생 시에 toast 메시지가 발생하도록 되어
있어서 그렇습니다.
DOM-content 로디드 이벤트는 웹페이지 로딩 후에 최초 1회만 발생하죠.
그 이후에 htmx 응답에서 이 코드가 수행되니 동콘텐트 로디드 이벤트가 발생할 일이
없죠. 그러니 토스트 메시지가 노출이 안 되는 것입니다.
동콘텐트 로디드 이벤트 핸들러 부분을 제거하고 응답 즉시 토스트 메시지를 노출하도록
변경합니다. 그럼 수정하면 이렇게 토스트 메세지가 잘 보여집니다.
수정을 계속 반복하면 토스트 메시지는 한 개인데 메세지 아래의 그림자 음영이 점점 짙어지는
것이 보이시나요?
한 위치에 토스트 메시지가 계속 쌓이고 있는 겁니다.
브라우저 개발자 도구로 보시면 이렇게 토스트 컨테이너가 노출된 메시지 개수만큼 쌓여 있죠?
이 토스트 컨테이너는 한 개만 있고 그 안에 토스트 메시지가 여럿 배치되도록 변경되어야
합니다. 앞선 실습에 버그를 해결하여 여러 토스트 메시지가 한 번에 보여질 수 있도록
개선해 보겠습니다.
해결 방법은 토스트 컨테이너를 단 하나만 두고요.
각 장고 메시지가 발생하면 이 토스트 컨테이너에 토스트 요소를 동적으로 추가하는
방법입니다. 코어에 toastmessages.javascript 정적 파일을 하나
생성하고요. 이 파일을 최상위 부모 템플릿에서 로딩해 줍니다.
이 파일이 로딩되면서 바디 요소 끝에 toast 컨테이너를 하나 추가하고요.
바디 요소에서 toastmessages 커스텀 이벤트를 받으면 이벤트 객체에서 메시지 레벨
태그와 메시지 내용을 추출하고요.
새로운 토스트 요소를 생성하여 토스트 컨테이너 요소 처음에 추가하고 토스트 메시지로
보여줍니다. 나중에 보여지는 토스트 메시지가 가장 상단에 보여지기 위해 토스트 컨테이너
요소 처음에 배치했습니다.
그러면 이렇게 장고 메시지 개수만큼 누적되어 토스트 메시지가 보여지게 됩니다.
toastmessages.js 경로에 자바스크립트 파일을 생성합니다
각 장고 메시지의 레벨 태그에 맞춰 색상 클래스를 결정해주는 두 개 함수가 있고요 초기
로딩 시에 바디 요소에 toast 컨테이너를 하나 추가해주고 바디 요소에 대해서 toast
메세지 커스텀 이벤트에 대한 리스너를 추가합니다
새로운 메시지가 있으면 토스트 메시지 이벤트를 발생하도록 할 것이고요.
이벤트 발생 시에 메시지의 레벨 태그와 메시지 내용을 인자로 전달받도록 할 것입니다.
레벨 태그에 맞게 색상 클래스를 결정하고요.
토스트 메시지에 HTML 문자열을 생성하고, 토스트 컨테이너 처음에 추가하고, 토스트
메시지로 노출시킵니다.
토스트 메시지 이벤트를 발생시키는 코드가 아직 없죠?
core-template-core-messages-as-event.html 템플릿 파일을
생성하고요. 각 템플릿에도 적용해 줍니다.
underbar-messages-as-event.html 템플릿에서는 각 장고 메시지마다
toast 메시지 이벤트를 레벨 태그와 메시지 내용과 함께 발생시키도록 합니다.
자바스크립트 파일들은 UI가 보여지는 것과 직접적으로 덱에 관련이 없어요.
그래서 덱의 웹페이지 끝으로 몰아서 화면이 조금이라도 빨리 뜨도록 하거든요.
블로그에 base.html 템플릿에서 자바스크립트 파일들을 웹페이지 끝으로 몰겠습니다.
코어에 toastmessages.js 자바스크립트 파일도 로딩토록 합니다.
웹페이지 새로고침하시고 수정을 이어서 여럿 해보시면 이렇게 toast 메시지들이 누적되어
여러 메세지가 보여짐을 확인하실 수 있습니다.