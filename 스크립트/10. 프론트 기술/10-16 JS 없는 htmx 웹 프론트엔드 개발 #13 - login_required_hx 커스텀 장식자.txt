HTMX 요청을 받는 뷰에서 로그인 리퀘어드 장식자처럼 페이지 이동이 필요한 응답을 할
수도 있습니다 태그 뉴 뷰에 로그인 리퀘어드 장식자를 적용해 보면 로그아웃 상황에서
로케이션 응답 패더를 통해 로그인 페이지로의 이동 응답을 합니다
HTMX에서는 페이지 이동 응답을 받으면 해당 주소로 페이지 이동을 시키는 것이 아니라
해당 페이지의 컨텐츠를 HTMX 지정 요소에 렌더링합니다
지정 요소에 로그인 폼이 보여지는 UI가 괜찮으시다면 그렇게 쓰셔도 괜찮겠지만, 이처럼
로그인이 필요한 생성 폼과 수정 폼이 같이 보여질 경우 로그인 폼이 여럿 보여질 수도
있죠. 지금과 같은 페이지에서는 로그인 페이지로 강제 이동을 시키는 것이 보다 적절해
보입니다. HTMX에서는 HX Location 응답 헤더를 통해 서버의 요청에 의한 페이지
이동을 시킬 수 있죠.
이를 활용해 보겠습니다.
로그인 여부를 확인하기 위해 블로그 앱 Base.html 템플릿에 로그인 유저 객체를
출력하겠습니다.
로그아웃 상황으로 먼저 만들어 주시고요.
현재 Unominous User 클래스 인스턴스로서 로그아웃 상황이 맞죠.
블로그 앱 태그 뉴 뷰에 로그인 Required 장식자를 적용합니다.
웹페이지 새로 고침하시면 생성 폼 부분이 로그인 폼으로 보여지고요.
수정 폼도 띄워보시면 이렇게 로그인 폼으로 보여지죠.
auth 앱에 로그인 required 장식자를 랩핑한 로그인 Required HX 장식자를
구현해 봤습니다.
이 장식자는 Vue의 사용 시에 인자 없는 적용과 인자 있는 적용 둘 다를 지원하기에
문법이 다소 복잡해 보입니다.
하지만 핵심 코드는 간단합니다.
Auth 앱의 Login Required 장식자를 통해서 반환된 응답 객체가 페이지 이동
응답일 경우, 그리고 HTMX 요청을 처리하는 중일 경우, Django HTMX
라이브러리에 HTTP Response Client Redirect를 통해 응답 객체를
생성하고 반환합니다.
이 경우 HX Location 응답 헤더를 사용하여 이동할 주소를 지정합니다.
로그인 리퀘어드 HX 장식자는 로그인 리퀘어드 장식자와 사용법이 동일합니다.
구현한 후에 태그 뉴 뷰에 적용해봅시다.
로그인 리퀘이어드 HX 장식자 코드를 복사해서 코어 폴더에 데코레이터 스파이 경로에
생성해줍니다.
Auth 앱에 login_required 장식자를 호출하여 login_required 장식자가
적용된 뷰 함수를 생성하고요 뷰 함수를 호출하여 응답 객체를 생성합니다 응답 객체가
HTTP Response Redirect 타입일 경우 Django HTMX의 HTTP
Response Client Redirect 응답으로 변경합니다
Response.URL 값은 Next 인자를 포함한 로그인 페이지 주소, 문자열입니다
태그 뉴뷰의 장식자를 로그인 리퀘이어드 로 변경합니다.
웹페이지 새로고침하시면 이번에는 로그인 페이지로 이동을 했죠.
그런데 넥스트 인자 주소를 보시면 방금 있던 블로그의 태그 주소가 아니라 생성 요청
주소인 블로그의 태그스의 뉴 주소입니다.
이동할 주소가 웹페이지 주소가 아닌 htmx 요청 주소로 지정이 된 상황이죠.
생성 폼 HTML을 획득하는 요청에서 요청 헤더를 보시면 hxcurrenturl 헤더로
현재 웹페이지 주소가 있죠.
HTML 요청에서는 hxcurrenturl 헤더에 지정된 주소로 페이지 이동을 해야
합니다. Next URL 값은 Next 인자가 포함된 로그인 페이지 주소이죠.
여기에서 Next 인자만 HX Current URL 값으로 변경해야 하고요.
이 요청 헤러 값은 Django HTMX에서는 Request HTMX의 Current
URL 속성으로 참조하실 수 있습니다.
제공해 드린 코드 페이지에서 아래로 스크롤해 보시면 Next 인자를 변경하는 코드가
있습니다 이 코드를 복사해서 적용해 주세요
HTMX 요청을 한 주소가 Next 인자로 포함된 URL 문자에 대해서 Next 인자만
HX Current URL 헤러 값으로 변경하는 코드입니다
그리고 다시 블로그 태그스 페이지에 방문하시면 이번에는 Next 인자가 블로그의 태그스
주소가 맞습니다.
주소가 맞게 지정되어 있고요.
로그인하시면 태그 목록 페이지로 정상 이동함을 확인하실 수 있습니다.
현재의 로그인 리퀘어드 HX 장식자 구현은 모든 리다이렉트 응답을 페이지 이동으로
처리하는데요. 현재 태그 뉴 뷰 구현에서는 페이지 이동으로 처리하지 않고 htmx에서
이동한 주소의 컨텐츠를 htmx 지정 요소에 렌더링 해야 하는 경우도 있습니다.
이를 대응하기 위해 로그인 리퀘어드 hx 장식자에서 로그인 페이지로의 이동 응답일 경우에만
hx 로케이션 헤더를 통해서 처리토록 개선해 볼 수 있습니다.
장고 기본에 settings에 로그인 URL 디폴트 로그인 주소가 있고요.
로그인 URL 설정으로 해당 장식자에 한정해서 커스텀 로그인 주소를 지정해 줄 수도
있습니다. HTMX 요청이고, 로그인 주소가 이동 주소에 포함된 경우에만 HX
Location 헤더를 통해 응답하도록 합니다.


1. 로그인 리퀘어드 HX 장식자 구현 목적 및 설정
목표: 로그인 필요 시, HTMX 요청에 대해 페이지 이동을 강제하는 방식으로 대응.
이슈: HTMX는 일반 페이지 이동 응답을 지정 요소에 렌더링하므로 로그인 페이지가 여러 개 표시될 수 있음.
해결 방법: HX-Location 헤더를 통해 페이지 이동을 유도하는 로그인 리퀘어드 HX 장식자 구현.
2. 기본 로그인 상태 및 확인
로그인 상태 확인:
로그아웃한 상태로 AnonymousUser 확인.
Base.html 템플릿에 로그인 여부 출력.
로그인 리퀘어드 장식자 적용:
Tag New 뷰에 login_required 장식자 적용 후, 로그아웃 상태로 테스트.
새로 고침 시 로그인 폼이 생성 폼 및 수정 폼 위치에 표시됨.
3. 로그인 리퀘어드 HX 장식자 구현
구현 준비:
auth 앱에 login_required 장식자를 래핑한 login_required_hx 장식자 추가.
장식자 기능:
기존 login_required 장식자에서 리디렉트 응답을 생성.
응답이 리디렉트일 경우, HTMX 요청에 대해 HX-Location 헤더를 사용하여 페이지 이동 주소를 지정.
적용 및 테스트:
Tag New 뷰에 login_required_hx 장식자 적용 후 새로고침 시 로그인 페이지로 강제 이동됨.
4. HTMX 요청 주소와 페이지 이동 주소 조정
이슈: 이동할 주소가 HTMX 요청 URL로 설정되어 기존 페이지와 맞지 않을 수 있음.
해결:
HX-Current-URL 헤더에서 현재 웹페이지 주소를 가져와 next 인자에 사용.
request.htmx.current_url을 참조하여 next 인자 수정.
적용 및 확인:
HX-Current-URL 값을 next 인자로 반영하여 로그인 후 원래 페이지로 돌아가도록 설정.
테스트 시 로그인 후 태그 목록 페이지로 정상 이동됨.
5. 로그인 페이지 이동을 선택적으로 적용
개선 사항:
로그인 리퀘어드 HX 장식자에서 로그인 페이지로의 이동 응답에만 HX-Location 헤더 사용.
구현:
settings.LOGIN_URL에서 로그인 URL 기본값을 확인.
login_required_hx 장식자가 로그인 주소에 한정해 HX-Location 헤더로 처리하도록 수정.





