모델 클래스에 맵핑되는 데이터베이스 테이블명을 Meta 클래스의 DB Table 옵션으로 지정할 수 있습니다.
미지정 시에는 디폴트 테이블명으로 앱이름-model명 소문자가 사용됩니다.
DB Table 속성을 변경하고 Make Migrations 명령을 수행하면 데이터베이스 테이블명을 변경하는 마이그레이션 파일이 생성됩니다.
장고 4.2부터 데이터베이스 테이블에 주석을 남길 수 있는 DB Table Comment 옵션도 지원합니다.
팀 내에 데이터베이스에 직접 접속해서 작업하는 데이터베이스 관리자나 데이터 분석가가 있을 경우 데이터베이스 테이블에서 주석을 확인할 수 있어서 유용합니다.
마이그레이션 적용 후에 IDE에서는 데이터베이스 패널에서 테이블 목록을 새로 고침하셔서 추가한 테이블 주석을 다시 읽어오시고, 테이블 내역에서 주석을 확인하실 수 있습니다
리뷰 모델 클래스에 Meta에 DB Table Comment 설정을 추가합니다
Make Migrations Blog 명령으로 모델 변경 내역에 대한 마이그레이션 파일을 생성하고요 
Migrate Blog 명령으로 해당 마이그레이션 내역을 적용해주세요
파이참에서 데이터베이스 패널을 여시고 테이블 목록을 새로 고침합니다.
블록 리뷰 테이블을 우클릭하시고 모디파이 테이블 메뉴를 선택하시면 방금 추가한 주석을 확인하실 수 있습니다.



이번 내용에서는 장고 모델 클래스에서 데이터베이스 테이블 이름과 주석을 설정하는 방법에 대해 다뤘습니다. 아래에 내용을 정리한 설명을 제공합니다.

1. 테이블 이름 지정 (DB Table)
장고에서는 모델 클래스에 Meta 클래스를 사용하여 테이블 관련 설정을 할 수 있습니다.
기본적으로 테이블 이름은 **앱 이름_모델 이름**의 소문자 형태로 자동 생성됩니다. 예를 들어, Blog 앱의 Review 모델이라면 기본 테이블 이름은 blog_review입니다.
테이블 이름을 변경하는 방법
Meta 클래스의 db_table 옵션을 사용하여 테이블 이름을 원하는 이름으로 지정할 수 있습니다.
python
코드 복사
class Review(models.Model):
    # 모델 필드 정의
    title = models.CharField(max_length=100)
    content = models.TextField()

    class Meta:
        db_table = 'custom_review_table'  # 원하는 테이블 이름 지정
마이그레이션 파일 생성 및 적용:

테이블 이름을 변경한 후, makemigrations 명령어를 실행하여 마이그레이션 파일을 생성합니다.
bash
코드 복사
python manage.py makemigrations blog
마이그레이션 파일을 데이터베이스에 적용합니다.
bash
코드 복사
python manage.py migrate blog
마이그레이션을 적용한 후, IDE에서 데이터베이스 패널을 새로 고침하여 테이블 이름이 변경된 것을 확인할 수 있습니다.

2. 테이블에 주석 추가 (DB Table Comment)
장고 4.2부터는 Meta 클래스의 db_table_comment 옵션을 사용하여 테이블에 주석을 추가할 수 있습니다.
데이터베이스 관리자가 테이블의 용도나 특징을 명시적으로 알 수 있도록 주석을 추가하는 데 유용합니다.
주석 추가 방법
python
코드 복사
class Review(models.Model):
    # 모델 필드 정의
    title = models.CharField(max_length=100)
    content = models.TextField()

    class Meta:
        db_table = 'review_table'
        db_table_comment = 'This table stores review data for blog posts.'  # 테이블에 주석 추가
마이그레이션 파일 생성 및 적용:

주석을 추가한 후, makemigrations 명령어를 실행하여 마이그레이션 파일을 생성합니다.
bash
코드 복사
python manage.py makemigrations blog
마이그레이션 파일을 데이터베이스에 적용합니다.
bash
코드 복사
python manage.py migrate blog
마이그레이션 후, IDE에서 데이터베이스 패널을 새로 고침하여 테이블의 주석을 확인할 수 있습니다.

예를 들어, PyCharm에서는 데이터베이스 테이블을 우클릭한 후, Modify Table 메뉴를 선택하면 테이블 주석을 확인할 수 있습니다.
3. 요약
테이블 이름 변경: 모델의 Meta 클래스에서 db_table을 지정하여 테이블 이름을 변경할 수 있습니다.
테이블 주석 추가: 장고 4.2 이상에서는 db_table_comment 옵션을 사용하여 데이터베이스 테이블에 주석을 추가할 수 있습니다.
변경 후, makemigrations와 migrate 명령을 사용하여 데이터베이스에 적용하며, IDE에서 데이터베이스 패널을 새로 고침하여 결과를 확인할 수 있습니다.
이 방법들은 데이터베이스 관리 및 협업 시 유용하며, 데이터베이스 테이블의 역할이나 용도를 명확히 기록하는 데 도움이 됩니다.