본 예시를 위해 웹 로그의 코멘트 모델에 별점, 레이팅 필드를 추가하겠습니다.
필드가 한 개만 있으면 Tableau inline과 Stacked inline의 UI
차이가 잘 보이지 않기 때문입니다.
Admin에서는 1대 N 관계에 대해 inline으로 여러 레코드들을 한 페이지에서 관리할
수 있는 inline 기능을 제공해 줍니다.
Tableau inline은 테이블 형식으로 한 행에 한 레코드를 수평적으로 여러 클럼으로
구성하고요. 이는 필드 개수가 적을 때 유용합니다.
Stacked inline은 한 레코드를 수직적으로 쌓아서 여러 행으로 구성합니다.
필드 개수가 많거나 더 많은 공간을 필요로 할 때 유용합니다.
모델스의 ForeignKey의 inline 지원과 동일하게
GenericForeignKey에서도 동일한 UI로 inline 지원을 받습니다.
Model C의 Foreign Key에서는 Tabular Inline과 Stacked
Inline 클래스를 상속받아 Custom Inline 클래스를 정의해서 Model
Admin 내에서 Inlines 설정을 통해 사용하실 수 있고요.
Generic Foreign Key에서도 사용법은 동일하지만, Generic Tabular
Inline 클래스와 Generic Stacked Inline 클래스를 상속받는다는 그
부분만 다릅니다.
각 Inline에 대해서도 Model Admin처럼 요청 유저의 조회, 추가, 수정, 삭제
권한에 맞춰 기능이 제공되고요.
해즈뷰 퍼미션 등의 메서드를 재정의해서 요청, 유저의 권한에 상관없이 특정 기능을 직접
끄실 수도 있습니다.
inline의 유용한 예는 주문에 대한 상품 목록, 이벤트에 대한 참가자 명단에서
참가자들의 이름, 이메일 등을 표로 표시, 학생의 성적 관리에서 한 학생의 모든 과목
설정을 표시, 회원별 구독 서비스나 구매 이력이 되겠습니다.
웹로그 앱에 포스트 모델을 어드민에 먼저 등록하겠습니다.
어드민에 등록이 되었고요.
포스트 수정 폼으로 진입해 보면 포스팅의 제목 필드만 보여지고 있습니다.
이제 코멘트 모델을 임포트하시고, 포스트 모델의 모델 어드민에 코멘트 모델에 대한 인라인을
추가해 보겠습니다.
TabularInline 유형으로 실습해 보겠고요.
현재의 Post 모델과 Comment 모델 간의 관계가 Models의 Foreign
Key를 통해서 맺어졌다면, TabularInline 클래스를 상속받았겠지만,
Generic Foreign Key를 통해서 맺어져 있으니, Generic
TabularInline 클래스를 상속받습니다.
Inline으로 연결할 모델명과 필드명을 지정합니다.
이제 Post admin의 InlinesList 설정으로
CommentTabularInline 클래스를 추가만 하면, Inline 기본 구현은
끝입니다. 이렇게 웹로그 포스팅 1의 GenericForeignKey를 통해 등록된 댓글
목록이 보이고요.
아래에 한 번에 댓글 3개를 추가할 수 있는 Extra 입력 폼도 있습니다.
Extra 입력 폼의 개수 설정도 하실 수 있고요.
0을 입력하시면 Extra 입력 폼이 제거되고, 아래 추가하기 버튼을 클릭해 입력 폼을
추가하시어 한 번에 여러 새로운 댓글을 생성하실 수 있습니다.
generic-stacked-inline 클래스를 상속받는
comment-stacked-inline 클래스를 생성하겠습니다.
comment-tabular-inline과 상속받는 클래스만 다를 뿐 같은 설정을
쓰겠고요.
post-admin에 inlines 설정도 변경합니다.
새로고침하시면 각 댓글의 컬럼들이 세로로 쌓인 UI로 변경됩니다.
그런데 필드가 한 개밖에 없어서 UI가 바뀐지 잘 모르겠습니다.
comment 모델에 별점, rating 필드를 추가하고요.
최소값 1, 최대값 5를 갖도록 합니다.
make-migrations와 migrate 명령으로 데이터베이스에 적용하고요 코멘트
모델에 필수 필드, 레이팅 필드를 추가하는 것이니까 make-migrations 시에
일회성 디폴트 값에 대해서 물어보네요
일회성 디폴트 값으로서 5를 지정해 주겠습니다
inline 클래스의 필드 설정에 레이팅 필드를 추가하고 새로 고침하면 이제 stacked
inline UI도 식별이 되네요
타블러 inline으로 다시 바꿔서 UI 차이를 확인해 봅니다.
inline 클래스에서 수정 권한을 일괄 삭제하면요.
요청 유저의 코멘트 모델에 대한 권한에 상관없이 이렇게 일괄적으로 수정 기능을 끄실 수
있습니다. 다른 권한 메서드에 대해서도 동일하게 응용을 해 보실 수 있습니다.
이렇게 삭제 기능을 일괄적으로 꺼 보실 수 있겠고요.
추가 기능에 대해서도 이렇게 일괄적으로 꺼 보실 수 있습니다.
추가 기능을 다시 살려 새로운 댓글을 저장해 보겠습니다.
아, 레이팅 필드 값을 입력 안 했군요.
입력하시고 저장해 봐도 뭔가 이상하네요.
모델 코드를 보니 1 이상, 1 이하의 범위로 제한이 되어 있습니다.
5 이하로 수정해 주시고 그리고 다시 저장해 보시면 저장이 잘 되죠.
수정 기능을 다시 살리시면 이렇게 수정 범위 다시 보여집니다.