이번에는 인증과 권한입니다.
Django 기본 앱 중에 Auth 앱을 통해서 강력한 인증과 권한 기능을 제공해 주고
있습니다. 우리 서비스에서 Auth 앱에 urls라는 걸 include만 해주면요.
해주고 시작 주소로 account를 넣습니다.
넣어주시면 account 로그인이라는 요청을 처리할 수 있고요.
이 주소로 들어가시면 로그인 페이지가 뜹니다.
이 템플릿을 하나 만들어줘야 됩니다.
그래서 로그인에 이렇게 form 태그 하나 딱 만들어주고요.
이 템플릿에서는 사용자 이름과 비밀번호에 대한 정의가 없습니다.
그렇죠? 그냥 form.html만 있고 버튼에 대한 코드만 있는데 이렇게
form.html이 만들어집니다.
이 부분이 장고 앞서 살펴본 장고 폼의 기능을 활용한 것이고요.
이 로그인 기능은 로그인 뷰를 통해서 안전하게 처리되고 있습니다.
장고의 인증과 권한을 살펴보기 전에 유저, 그룹, 권한 모델에 대해서 살펴봅시다.
인증과 권한은 이 세 개의 모델 기반에서 동작합니다.
각 모델은 Auth 앱에서 지원하고요.
퍼미션 모델을 통해 지원하는 권한들을 나열하고 유저 혹은 그룹 단위로 권한을 부여할 수
있습니다.
퍼미션에는 각 모델별로 Add, Change, Delete, View 권한이 자동으로
추가되고 모델별로 원하는 권한을 추가하실 수도 있습니다
유저 모델에서는 User_Permissions 필드를 통해서 각 유저마다
다수의 권한을 부여할 수 있으며 Groups 필드를 통해 다수의 그룹에 추가될 수 있겠고요
그룹 모델에서는 Permissions 필드를 통해서 다수의 권한을 부여할 수 있습니다
그룹에 속한 유저들에게 권한을 부여하기 위해 각 유저별로 일일이 권한을 부여하지 않아도
그룹에 권한을 부여하는 것만으로 각 유저들에게 권한이 부여됩니다.
특정 유저가 어떤 권한을 가지고 있는지 여부는 head-perm 메서드를 호출해서 확인할
수 있습니다. 슬라이드에서 보시는 바와 같이 새로운 모델을 만들면 이렇게 add,
change, delete, view라는 권한이 추가가 됩니다.
퍼미션 모델에 대한 데이터베이스 레코드로 추가가 되는 것이고요 추가로 필요한 퍼미션이
있다면 PostModel 클래스에서 메타 클래스 안에 Permissions라는 리스트로 그
권한에 대한 코드명과 레이블을 추가해 주시면 마이그레이션을 통해 자동으로 이 퍼미션스
레코드로 추가가 됩니다
장고 기본에서 지원해 주는 그룹 기능을 통해서 프리미엄 그룹을 따로 만들었다고 가정해
봅시다 그때 앞서 정의한 뷰 언더바 프리미엄 포스트 권한을 추가한다면 이와 같이 그룹을
생성 혹은 조회해서 해당 그룹의 Permissions 필드를 통해서 해당
Permission을 추가할 수 있어요
이렇게 추가하면 이 프리미엄 그룹에 속한 모든 유저들에게 뷰 프리미엄 포스트라는 권한이
부여가 됩니다
프리미엄 그룹에 존이라는 유저를 추가하려면 이렇게 GroupInstance를 조회하신 후에
해당 UserInstance.groups라는 필드를 통해서 해당 그룹을 추가하시면 되겠고요
이렇게 그룹에 유저가 추가가 되면 그 유저는 그 유저에게 따로 권한을 추가하지 않아도 해당
권한을 가지게 됩니다
장고는 웹할머크이니까 뷰 함수에서도 권한 체크할 일이 많은데요 뷰 함수에
permission-required라는 장식자를 적용해 주시면 뷰를 통해서도 손쉽게 권한을
체크하실 수 있고 기본 동작으로 권한이 없으면 그 유저는 로그인 페이지도 이동하고 혹은
추가적인 옵션을 지정해서 원하는 페이지로 이동을 시키실 수 있습니다