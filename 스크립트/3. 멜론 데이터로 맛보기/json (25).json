자 이번에는 장고 디버그 툴바의 여러 패널들을 간단하게 살펴보겠습니다
히스토리 패널들이 있습니다
과거 스냅샷으로 전환하여 해당 요청에 대한 내역을 확인할 수 있는데요 우리가 페이지가 계속
바뀌면서 매번 현재 요청에 대한 디버그 툴바 내용만 볼 수 있는데 장고 디버그 툴바는
히스토리를 다 저장하고 있다는 거죠
특정 요청에 대한 내역을 보고 싶을 때 스위치 버튼을 눌러서 이렇게 전환을 하실 수
있습니다 타이머 패널의 경우에는 브라우저에서의 요청 시작에서부터 응답 처리까지 걸린 시간을
각각의 항목별로 시간을 확인할 수 있습니다
그리고 settings 패널은 현장고 서버의 settings 내역을 확인할 수 있어요
그래서 우리가 이제 나중에 서비스 개발을 하시다 보면은 환경 변수나 여러가지 값을 참조해서
세팅스를 좀 동적으로 변경하는데 그러한 환경변수 내역이 세팅스에 정확하게 반영이 되어
있는지 확인할 목적으로 쓰시면 좋습니다.
헤더 패널은 현재 요청에 대해서 그리고 응답에 대한 헤더를 확인하실 수 있어요.
물론 이런 내역은 크롬 브라우저의 개발자 도구의 네트워크 탭을 통해서도 확인해 볼 수
있겠지만 웹브라우저 안에서도 장고 디버그 툴바를 통해서 편리하게 헤드값을 살펴보실 수
있고요 리퀘스트 패널이 있습니다
이 패널에서는 하나의 요청이 어떤 뷰를 통해서 처리가 될 때 어떤 인자로 호출이 되었고요
그리고 쿠키 내역과 그리고 세션 데이터와 요청의 GET 데이터와 POST 데이터까지 확인을
하실 수 있어요
히스토리 기능이 있으니까 원하는 요청으로 스위치에서 해당 요청에서 어떤 쿠키나 세션이나
GET POST가 어떤 값이었는지 확인하기 아주 편리합니다
그리고 앞서 살펴봤던 SQL 패널이죠
SQL 패널은 장고 디버그 툴바 미들웨어가 요청을 받은 순간부터 응답을 처리할 때까지의
수행된 SQL 내용 및 실행 계획을 확인할 수 있습니다
템플릿 패널입니다.
이 템플릿 패널에서 편리한 기능이 뭐냐면 어떤 템플릿들이 사용되고 있고 그 템플릿 내에서
사용하는 값들의 목록을 살펴볼 수 있습니다
템플릿 패널을 한번 열어볼까요
로컬러스트 8000의 핫트랙 페이지로 가보겠습니다
여기에 템플릿 패널을 열어볼게요
열어보시면 현재 어떤 템플릿이 사용이 된지 보이죠
이렇게 보이고요 그리고 song이 여러 번 활용이 되었음을 확인하실 수 있고 어떤
템플릿에서 어떤 값들을 참조할 수 있는지 제공된 값들의 목록을 값과 함께 살펴보실 수
있어요 song에는 우리가 이렇게 song이 있네요
노래만 참조하도록 했잖아요
우리가 인덱스에 가보면 여기에 song에 only만 넣었으니까 값이 좀 적은데 only를
만약에 빼잖아요
이렇게 빼시면은 새로고침하고 다시 열어보면은 값이 많아졌죠
인덱스에 있는 모든 값이 넘어오는데 이렇게 하기보다 사용되는 값을 명시적으로 지정하고
only 주시면은 이 값만 이렇게 확인을 하실 수 있게 됩니다.
캐시 패널에서는 캐시 내역을 확인할 수 있습니다.
캐시는 다양한 목적으로 사용할 수 있는데요.
대표적으로 모든 유저에게 동일한 뷰 응답을 할 경우 매번 데이터베이스 조회와 템플릿 렌더링을
수행하는 것은 리소스 낭비일 수 있습니다.
이 경우 캐시를 적용해보면 첫번째 요청에서는 캐싱된 내역이 없으니 데이터베이스 조회 및
템플릿 렌더딩이 수행되지만 두번째 요청부터는 캐시된 내역을 캐시해서 바로 꺼내어서 응답을
주기 때문에 데이터베이스 부하를 줄이고 보다 빠른 응답이 가능해집니다
많은 수의 유저에게 같은 화면이 제공되는 이벤트 페이지에 적용하면 좋습니다
view함수에 cache를 적용하려면 cache_page 장식자를 만료시간을 초단위로
지정합니다. 그러면 첫 요청에서는 캐싱된 내역이 없으니 데이터베이스 조회가 발생하지만
지정된 만료시간인 60초 내에 재요청이 있으면 스크린샷과 같이 데이터베이스 조회 없이
캐싱된 값으로 응답이 되었음을 확인할 수 있습니다.
캐시에 대해서는 이후 자세히 살펴보겠습니다.