외부 JSON 데이터를 로딩해서 템플릿을 통해 표현해 보겠습니다
JSON을 통해 생성된 사전 객체를 템플릿에 바로 쓸 수 있습니다
하지만 사전은 값과 관련된 메서드를 구현하기가 번거롭거든요
또, 키 오타가 있을 때 확인하기 어렵습니다
그래서 사전 객체를 데이터 클래스로 바꿔 보겠습니다
데이터 클래스를 사용하면 생성자 없이도 손쉽게 인스턴스 변수에 값을 할당할 수 있습니다
이렇게 클래스로 만들면 각 값을 속성으로 참조하실 수 있습니다
없는 속성에 접근할 때 툴을 통해서 오류를 금세 파악할 수 있고요 또 속성과 관련된
메서드도 클래스에 추가해서 사용할 수 있습니다
해당 URL로부터 JSON 문자를 읽어드려서 이렇게 파이썬 객체화 시킨 다음에 곡 목록
리스트에서 사전을 하나씩 받아옵니다
그리고 사전 객체를 SongClass의 인스턴스로 만드는데요
제가 fromDig이라는 이름의 클래스 메소드를 SongClass에 추가해 뒀습니다
그래서 사전을 받으면 이 클래스의 인스턴스를 만들 때 사전으로부터 값을 꺼내서 이렇게
생성자에다가 값을 지정을 해주게 됩니다
그러면 Song 인스턴스로 이루어진 리스트가 생성이 되겠고요 이 리스트를 렌더를 통해서
템플릿 단에서 활용을 해보겠습니다
이 코드들은 슬라이드 하단의 링크를 통해서 확인하실 수 있습니다.
현재 코드가 있겠고요.
모델스01.py입니다.
여기에서 제가 모델 코드와 뷰 코드를 한 파이더에 넣어놨거든요.
그래서 모델 코드만 복사하셔서 모델스 파이에 이렇게 전체 지우시고 붙여 넣으십니다.
이렇게 붙였고요.
이 Song 클래스는 장고 모델은 아니고요.
그냥 일반 파이썬 클래스입니다.
일단은 데이터 클래스로 실습을 하고 나서 이후에 장고 모델 클래스로 변경을 한번
해보겠습니다.
Song 클래스를 정의했고요.
그리고 하트랙에 Vue Spy에서 이 코드도 이렇게 복사해서 전체를 이렇게 변경하겠습니다.
이렇게 하시면 해당 주소에 있는 데이터를 JSON 문자열로 읽어서 그리고 파이썬
객체화시키고 그리고 그 리스트에 있는 각각의 값들을 song이라는 클래스 인스턴스로 변경한
새로운 리스트를 만든 거죠
이번에는 index.html 템플릿과 언더바 송.html을 변경해서요 index.html은
송리스트를 순회하면서 HTML을 구성을 해주고 각각의 노래마다 underbar_song.html을
사용해서 이렇게 HTML 마크업을 해주겠습니다
그래서 이 두 개가 잘 적용이 되면 오른쪽에 보시는 거와 같이 화면이 이렇게 보여지게
되겠고요. 멜론이라는 버튼을 클릭하면 이렇게 멜론 페이지가 뜨고 유튜브라는 버튼을 클릭하면
유튜브 페이지가 뜹니다.
멜론 링크 부분은 melon_detail_url이라는 속성이 있겠고요.
유튜브 링크는 youtube_search_url이라는 속성이 있습니다.
이 속성은 앞서 song-class에서 커스텀 속성으로 추가를 했습니다
그래서 melon_detail_url이라는 속성은 song에 melon-uid 값을
참조해서 이렇게 url을 만들어서 문자로 리턴을 해주고요
유튜브 search url인 경우에는 이 song의 name과 artistName 값을
가져와서 유튜브에 search-query라는 query 파라미터 값으로 이렇게 값을
지정해서 링크를 만들어 준 거예요
그래서 유튜브에서는 곡명과 가수명으로 검색 페이지가 뜬 겁니다
현재 핫테렉 페이지에 접속해 보시면 화면이 이렇게 나오고요
현재 뷰 단에서 송 리스트를 넘기고 있지만 템플릿 단에서 아직 그 값을 표현하지 않았기에
이전 모습으로 보이고 있습니다
인덱스 매치 템의 하단에 보시면 이렇게 네 곡에 대해서 인클루드를 한 부분이 있죠
그래서 여기도 이제 네 개가 표시가 되는데요
이 콜 위에서 우리가 for song in song list를 순회를 돌겠고요 그리고 여기
div 하나가 끝나면 for loop를 닫겠습니다
이제 수동으로 추가했던 부분은 이렇게 제거를 하겠고요 우리가 템플릿 엔진에서 하나의
템플릿에서 다른 템플릿을 include 할 때 이제 밖에 정의되어 있는 값들이 이
템플릿에도 그대로 전달이 됩니다
밖에 정의된 모든 값들을 다 접근할 수 있어요
그런데 그렇게 하면 이 템플릿에서 사용하는 값을 정확하게 어떤 값이 참조되는지 좀 알아보기
힘들기 때문에 저는 뒤에다가 원래는 width를 붙여서 추가로 이 템플릿에서 사용할 값을
추가로 전달할 수 있는데 여기에다가 제가 song이란 이름으로 성을 놓고요 그리고
only라는 걸 붙이면 위드에 지정된 값만 템플릿에서 사용할 수 있게 됩니다.
이렇게 하면 좀 더 명시적이기 때문에 저는 이렇게 사용을 하고 있겠고요.
이 템플릿으로 이동을 해보시면 이미지 부분은 로댄 픽섬을
사용하지 않고, Song의 Cover URL이라는 속성을 참조하겠습니다.
이미지의 Alt에 대해서도 Song의 Name을 넣어 볼 수 있겠죠.
안에 정의되어 있는 텍스트 부분은 지우고, Song의 Artist Name과 그리고 파이프
쓰고 Song의 Name을 적용해 보겠고요.
그리고 이제 버튼이 있죠?
이 버튼 부분은 처음 버튼을 이제 제가 멜론이라고 쓰고 두 번째는 이제 유튜브라고 썼는데
이 버튼의 스타일을 BTN Online Secondary가 아니고 Danger라고 쓰면
이제 빨간색으로 표시가 됩니다
그리고 버튼보다 A로 사용하시면 이제 링크를 지정할 수 있는 거죠
A를 사용하더라도 부트스텝을 사용하기 때문에 보여지는 것은 버튼으로 똑같이 보여집니다.
멜론의 디테일 URL이고 그리고 송의 유튜브의 서치 URL이 되겠죠.
이렇게 하시고 새로고침 하시면 이제 곡이 쭉 출력이 되는데 한 줄이 있고 두 줄로 표현되는
게 있잖아요 이 박스들의 세로 길이가 다 달라서 레이아웃이 조금 이상해 보이죠
그래서 이 부분을 제가 따로 스타일을 적용하겠습니다.
그래서 클래스 쓰시고 텍스트는 로랩, 그리고 overflow는 히든, 그리고 텍스트
트렁케이트라고 이렇게 지정하시고 새로고침 하시면 한 줄로 나오고 박스 스타일이 다 맞게
되죠. 이 부분에도 Song에 Like Count를 넣어줍니다.
이렇게 넣어주시면 좋아요
수까지 확인을 하게 되었고 하나의 노래도 클릭하시면 이렇게 멜론 페이지도 이동을 하고요.
그리고 유튜브도 클릭해보시면 유튜브 페이지도 나오고 있습니다.
아, 여기에 오타가 있었네요.
여기 오타도 수정을 해주시고요.