앞선 강의에서 안내해 드린 서브 도메인 주소를 신청하셨나요?
아직 신청하지 않으셨다면 서브 도메인 발급 받으시고 강의를 진행해 주세요.
본 영상에서는 도메인이 꼭 필요합니다.
배포된 서비스에서 루트의 CRA 투두스 페이지를 열어주시고요.
할 일 수정이나 생성 버튼을 클릭해 보시면 iframe 모델 컴포넌트를 통해 이렇게 모델이
뜨고 장고 페이지로 요청이 들어갑니다
그런데 모델 내용이 없습니다
개발자 도구 열어보시면요 앞선 장고 수정 내역 세팅스에서 CSP 관련 설정을 서버에 아직
배포를 안 하신 분들은 첫 번째 에러가 뜨실 거고요
CSP 관련 에러입니다
동일 출처인데 CSP 설정이 안 맞아서 그렇습니다
이전 수정 내역을 서버에 반영해 주시면 첫 번째 에러가 사라지고 iframe이 동작합니다
이 에러가 발생하는 이유는 현재 웹페이지 주소가 로컬 호스트가 아닌데 HTTP
프로토콜이어서 iframe 출처를 브라우저가 신뢰할 수 없다고 판단해서 그렇습니다
HTTP 프로토콜은 로컬 호스트 주소에서만 가능합니다
그럼 정상적인 서비스를 하려면 HTTPS 프로토콜을 사용하고 싶은데 HTTPS 세팅을
하려면 도메인이 필요합니다
여러분들의 서버 IP가 있구요 여러분들의 도메인이 이 IP를 가리키고 있어야 합니다
그리고 서버의 IPv4 방화벽에서 HTTPS 요청을 받기 위해 443번 포트가 열려 있어야
합니다 혹시 아직 열려 있지 않으시면 열어주시구요
이 화면은 AWS에서 도메인 관리자 페이지이고요 서브 도메인을 설정하는 화면입니다
여러분들께서 도메인을 신청해 주시면 제가 이 화면을 통해 어떤 도메인이 어떤 IP를
가리키게 되는지 설정해 드릴 거예요 방금
도메인을 추가했고요 이제 여러분의 도메인이 여러분의 서버를 가리키고 있습니다
현재 서버에 HTTPS 인증서를 추가해 보겠습니다.
Certbot 유틸리티를 사용할 것이고요.
파이썬으로 개발된 유틸리티입니다.
snap install 명령으로 Certbot 유틸리티를 설치합니다.
설치 후에 Certbot 명령을 확인해 주시고요.
nginx 설정에서 서버네임 항목에 여러분의 도메인 주소를 적용해 주세요.
제 도메인 주소 넣으시면 HTTPS 인증서 발급에 실패합니다.
여러분의 서버를 가리키고 있는 도메인을 넣으셔야 HTTPS 인증서 발급 받기가 성공합니다
엔진X 설정 저장하시고 엔진X를 리로드 해주세요
이제 명령 하나면 HTTPS 인증서 받고 엔진X 서버에 적용하기까지 자동으로 이루어집니다
루트 권한으로 Certbot 명령을 실행하고요 엔진X 웹서버에 인증서 적용하고 도메인
주소는 "-d", 옵션으로 여러분의 도메인 주소를 지정합니다
여러분들의 이메일 주소 지정해 주시고 약관에 동의하시고요
이메일 공유에 대한 부분은 공유하지 않으셔도 괜찮습니다
그럼 서트봇에서 서버의 IP와 도메인 주소 매칭을 확인한 후에 인증서 발급받고 nginx
웹서버에 적용까지 해줍니다
발급된 인증서는 90일 동안만 사용할 수 있거든요
그 기간 내에 갱신이 필요한데요 인증서 자동 갱신도 Certbot을 통해 자동으로 이루어집니다
nginx 설정 파일을 열어보시면 이렇게 인증서 관련 설정이 자동 추가되어 있고요 우리
nginx 설정은 443번 포트로 서비스되는 서버 설정에 있고요 같은 도메인이지만 HTTP와
HTTPS는 엄연히 다른 사이트입니다
80포트 HTTP 요청이 들어오면 엔진엑스 단에서 443번 HTTPS 페이지로 자동
이동하는 설정이 들어 있습니다
그럼 HTTP로 유저가 서비스에 접속하더라도 항상 HTTPS로 서비스하게 됩니다
서브 도메인 접속해 보시면 새로운 주소니까 장고 서버에 AllowedHost 설정에 추가해
주셔야겠네요
추가하시고 서버 재시작하시면 우리가 구현한 대로 배포 완료입니다